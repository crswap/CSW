{
  "contractName": "Proxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract GenNFT",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "contract IEvolution",
          "name": "_evo",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bonusPerBurnedNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "evo",
      "outputs": [
        {
          "internalType": "contract IEvolution",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nft",
      "outputs": [
        {
          "internalType": "contract GenNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "bonus",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        }
      ],
      "name": "getNFTPowerBonusBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNFTPowerBonus",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract GenNFT",
          "name": "_nft",
          "type": "address"
        }
      ],
      "name": "updateNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IEvolution",
          "name": "_evo",
          "type": "address"
        }
      ],
      "name": "updateEvo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bonusPerBurnedNFT",
          "type": "uint256"
        }
      ],
      "name": "updateBonus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract GenNFT\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"contract IEvolution\",\"name\":\"_evo\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"bonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusPerBurnedNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evo\",\"outputs\":[{\"internalType\":\"contract IEvolution\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNFTPowerBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"getNFTPowerBonusBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract GenNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bonusPerBurnedNFT\",\"type\":\"uint256\"}],\"name\":\"updateBonus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IEvolution\",\"name\":\"_evo\",\"type\":\"address\"}],\"name\":\"updateEvo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract GenNFT\",\"name\":\"_nft\",\"type\":\"address\"}],\"name\":\"updateNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/GenNFT.sol\":{\"keccak256\":\"0xe74a7771cda36fe71e5c876142efeea00a5aea5ad322f0b77bb54ee48b515d84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd1964ebc7d21534df99a802cec9974ae6071f9172cb4b6d5c72458b288bf3a\",\"dweb:/ipfs/QmX5wGQVHTLxxU2Xdk27ZuMpFujbws2qaadUecTR9qd26M\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/GenToken.sol\":{\"keccak256\":\"0x6b93be1862fcbe6e5a383153ed2772d72c0024f52b2c3afd59489f3236b8fb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cae79777848ce6c7089608cf684412e7263e7e0b6c728cacda1683cc82fe0b31\",\"dweb:/ipfs/QmW2obJNL8JaG35h3EKypAUWGsEeBQupXWJDdfBu1AZLHg\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/OwnableToken.sol\":{\"keccak256\":\"0xfd714aa5a209ab76ee7d3bf90a3a4ba9217e2a76df7b431323a4b1891901932c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab52d7c90cffb9a9e3bc2d1e91304c85e2ea1a9993426da723ebe0d33cda2c14\",\"dweb:/ipfs/QmfTg8VeonbKgubcZu1pnynvRBBsEdoAaiky4avMpY6Tp2\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/Proxy.sol\":{\"keccak256\":\"0x8d0f0e32f7fab285f5beb49716b2bee06fa858a57241a03ce24c260f10e8f8b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f762f263589870869ff621cd952f3f1574c2036c50a1aa70b1bdeb93a5cba663\",\"dweb:/ipfs/QmVMb42HgtME9nmfjdLAw3ZvkkXsiPEAHZGZ94aPXDzfF7\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x964c4f1313db157aee9a5d71350cbbf5d9ed969070480e99fd750c2b641f43d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c87a7f19ea7863f29768ad86b3962d7f188d68d2dde228a2ffa553008dee589\",\"dweb:/ipfs/QmXTj4AJAwQBe1SQXmtnuA3e1Ed91ANSMp9B89rKbuENUK\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xf94543a2c0426f4579e2414be5087a34454de9dea24517bac2278f8edd16f8cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://459f5cc541238e27d09911bbda1d39c6f87d2bef63caa3ae9431f98f53926376\",\"dweb:/ipfs/QmePektGzfqYfXMUSjWir2hkaNoxhEFkaDPgHEhbe2uacw\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456\",\"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x3dce5847e70c056ef0f7cf91cb9a0067cf90784794017a45c1211cde7ed1c08c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba34b5028b6a297467a7364d9af182649dee0611a0f9620ec27ce10647885cad\",\"dweb:/ipfs/QmWhGtHDcAYWA31f3Ze9izeh3SPMRzcFagTUwxExLg3sRc\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df5776161e3226ac31bfb919dfe5f42e173a08293fadb4ffa90ffb55e76869d7\",\"dweb:/ipfs/QmXtKfvWj1v6oha8urbnw4RmjSpmQjZsGGqK5qk5trK4nH\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62\",\"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0xd260defa45bc1bbdf5e6d74298fb2705bf058c3d2beb17fb1158fa1a430c5024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ada67d8251f88b8c3df5a79d9d4930fd7061634fb110478c407b4d9abc3e120\",\"dweb:/ipfs/QmeEdLBhUuF7C2ZtzTWjSCAbcemFtma8Gh91pFY3djaTz3\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x71e0d1cc75b67306382e055b789b6d3ffe34a9e2e55380d3c9895a36a42229e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea28aa69470f0f5bb38095c59d2d68db03fc52faa5640de4486a188ecc168870\",\"dweb:/ipfs/QmdwRX791f2gdkxLfzQLcyx3ZLvSjGd2wdX8gXFi8sH2uW\"]}},\"version\":1}",
  "bytecode": "0x6080604052603260035534801561001557600080fd5b5060405161095f38038061095f833981016040819052610034916100bd565b600061003e6100b9565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b039384166001600160a01b0319918216179091556002805492909316911617905561010e565b3390565b600080604083850312156100cf578182fd5b82516100da816100f6565b60208401519092506100eb816100f6565b809150509250929050565b6001600160a01b038116811461010b57600080fd5b50565b6108428061011d6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806372c1bc191161008c578063cc4d088411610066578063cc4d088414610185578063d8cb4aa31461018d578063f2ef62dd146101a0578063f2fde38b146101a8576100cf565b806372c1bc19146101625780638da5cb5b1461016a5780639f8dbb7b14610172576100cf565b8063150b7a02146100d457806347ccca02146100fd57806356e585f3146101125780635be68e93146101275780636a6399311461013a578063715018a61461015a575b600080fd5b6100e76100e23660046105a0565b6101bb565b6040516100f491906106fb565b60405180910390f35b6101056101cb565b6040516100f491906106e7565b61012561012036600461057d565b6101da565b005b61012561013536600461057d565b610244565b61014d6101483660046106b7565b6102a5565b6040516100f4919061078b565b610125610341565b61014d6103ca565b6101056103d0565b6101256101803660046106b7565b6103df565b61014d610423565b61014d61019b36600461057d565b610429565b6101056104aa565b6101256101b636600461057d565b6104b9565b630a85bd0160e11b949350505050565b6001546001600160a01b031681565b6101e2610579565b6001600160a01b03166101f36103d0565b6001600160a01b0316146102225760405162461bcd60e51b815260040161021990610756565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61024c610579565b6001600160a01b031661025d6103d0565b6001600160a01b0316146102835760405162461bcd60e51b815260040161021990610756565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600154604051634331052360e11b8152600091620f4240916001600160a01b03909116906386620a46906102dd90869060040161078b565b60606040518083038186803b1580156102f557600080fd5b505afa158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d919061065c565b6020015161033b91906107be565b92915050565b610349610579565b6001600160a01b031661035a6103d0565b6001600160a01b0316146103805760405162461bcd60e51b815260040161021990610756565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60035490565b6000546001600160a01b031690565b6103e7610579565b6001600160a01b03166103f86103d0565b6001600160a01b03161461041e5760405162461bcd60e51b815260040161021990610756565b600355565b60035481565b60025460405163d8cb4aa360e01b81526000916001600160a01b03169063d8cb4aa39061045a9085906004016106e7565b60206040518083038186803b15801561047257600080fd5b505afa158015610486573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033b91906106cf565b6002546001600160a01b031681565b6104c1610579565b6001600160a01b03166104d26103d0565b6001600160a01b0316146104f85760405162461bcd60e51b815260040161021990610756565b6001600160a01b03811661051e5760405162461bcd60e51b815260040161021990610710565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b60006020828403121561058e578081fd5b8135610599816107f4565b9392505050565b600080600080608085870312156105b5578283fd5b84356105c0816107f4565b93506020858101356105d1816107f4565b935060408601359250606086013567ffffffffffffffff808211156105f4578384fd5b818801915088601f830112610607578384fd5b813581811115610619576106196107de565b61062b601f8201601f19168501610794565b91508082528984828501011115610640578485fd5b8084840185840137810190920192909252939692955090935050565b60006060828403121561066d578081fd5b6040516060810181811067ffffffffffffffff82111715610690576106906107de565b80604052508251815260208301516020820152604083015160408201528091505092915050565b6000602082840312156106c8578081fd5b5035919050565b6000602082840312156106e0578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160e01b031991909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b60405181810167ffffffffffffffff811182821017156107b6576107b66107de565b604052919050565b6000826107d957634e487b7160e01b81526012600452602481fd5b500690565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461080957600080fd5b5056fea2646970667358221220354f4ebca5c79d64494e72a6e960171d5b6764ecb19347830521e3cd0bf7911264736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806372c1bc191161008c578063cc4d088411610066578063cc4d088414610185578063d8cb4aa31461018d578063f2ef62dd146101a0578063f2fde38b146101a8576100cf565b806372c1bc19146101625780638da5cb5b1461016a5780639f8dbb7b14610172576100cf565b8063150b7a02146100d457806347ccca02146100fd57806356e585f3146101125780635be68e93146101275780636a6399311461013a578063715018a61461015a575b600080fd5b6100e76100e23660046105a0565b6101bb565b6040516100f491906106fb565b60405180910390f35b6101056101cb565b6040516100f491906106e7565b61012561012036600461057d565b6101da565b005b61012561013536600461057d565b610244565b61014d6101483660046106b7565b6102a5565b6040516100f4919061078b565b610125610341565b61014d6103ca565b6101056103d0565b6101256101803660046106b7565b6103df565b61014d610423565b61014d61019b36600461057d565b610429565b6101056104aa565b6101256101b636600461057d565b6104b9565b630a85bd0160e11b949350505050565b6001546001600160a01b031681565b6101e2610579565b6001600160a01b03166101f36103d0565b6001600160a01b0316146102225760405162461bcd60e51b815260040161021990610756565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61024c610579565b6001600160a01b031661025d6103d0565b6001600160a01b0316146102835760405162461bcd60e51b815260040161021990610756565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600154604051634331052360e11b8152600091620f4240916001600160a01b03909116906386620a46906102dd90869060040161078b565b60606040518083038186803b1580156102f557600080fd5b505afa158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d919061065c565b6020015161033b91906107be565b92915050565b610349610579565b6001600160a01b031661035a6103d0565b6001600160a01b0316146103805760405162461bcd60e51b815260040161021990610756565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60035490565b6000546001600160a01b031690565b6103e7610579565b6001600160a01b03166103f86103d0565b6001600160a01b03161461041e5760405162461bcd60e51b815260040161021990610756565b600355565b60035481565b60025460405163d8cb4aa360e01b81526000916001600160a01b03169063d8cb4aa39061045a9085906004016106e7565b60206040518083038186803b15801561047257600080fd5b505afa158015610486573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033b91906106cf565b6002546001600160a01b031681565b6104c1610579565b6001600160a01b03166104d26103d0565b6001600160a01b0316146104f85760405162461bcd60e51b815260040161021990610756565b6001600160a01b03811661051e5760405162461bcd60e51b815260040161021990610710565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b60006020828403121561058e578081fd5b8135610599816107f4565b9392505050565b600080600080608085870312156105b5578283fd5b84356105c0816107f4565b93506020858101356105d1816107f4565b935060408601359250606086013567ffffffffffffffff808211156105f4578384fd5b818801915088601f830112610607578384fd5b813581811115610619576106196107de565b61062b601f8201601f19168501610794565b91508082528984828501011115610640578485fd5b8084840185840137810190920192909252939692955090935050565b60006060828403121561066d578081fd5b6040516060810181811067ffffffffffffffff82111715610690576106906107de565b80604052508251815260208301516020820152604083015160408201528091505092915050565b6000602082840312156106c8578081fd5b5035919050565b6000602082840312156106e0578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160e01b031991909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b60405181810167ffffffffffffffff811182821017156107b6576107b66107de565b604052919050565b6000826107d957634e487b7160e01b81526012600452602481fd5b500690565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461080957600080fd5b5056fea2646970667358221220354f4ebca5c79d64494e72a6e960171d5b6764ecb19347830521e3cd0bf7911264736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:614:39",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:39",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "146:319:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "192:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "201:6:39"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "209:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "194:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "194:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "194:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "167:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "176:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "163:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "163:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "188:2:39",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "159:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "159:32:39"
                  },
                  "nodeType": "YulIf",
                  "src": "156:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "227:29:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "246:9:39"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "240:5:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "240:16:39"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "231:5:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "301:5:39"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_GenNFT",
                      "nodeType": "YulIdentifier",
                      "src": "265:35:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "265:42:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "265:42:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "316:15:39",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "326:5:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:39"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "340:40:39",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "365:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "376:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "361:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "361:18:39"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "355:5:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:25:39"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "344:7:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "425:7:39"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_GenNFT",
                      "nodeType": "YulIdentifier",
                      "src": "389:35:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "389:44:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "389:44:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "442:17:39",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "452:7:39"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "442:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_GenNFT_$1518t_contract$_IEvolution_$3469_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "115:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "127:6:39",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "135:6:39",
                "type": ""
              }
            ],
            "src": "14:451:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "526:86:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "590:16:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "599:1:39",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "602:1:39",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "592:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "592:12:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "592:12:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "549:5:39"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "560:5:39"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "575:3:39",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "580:1:39",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "571:3:39"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "571:11:39"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "584:1:39",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "567:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "567:19:39"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "556:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "556:31:39"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "546:2:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "546:42:39"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "539:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "539:50:39"
                  },
                  "nodeType": "YulIf",
                  "src": "536:2:39"
                }
              ]
            },
            "name": "validator_revert_t_contract$_GenNFT",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "515:5:39",
                "type": ""
              }
            ],
            "src": "470:142:39"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_GenNFT_$1518t_contract$_IEvolution_$3469_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_contract$_GenNFT(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_t_contract$_GenNFT(value_1)\n        value1 := value_1\n    }\n    function validator_revert_t_contract$_GenNFT(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
      "id": 39,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5519:39",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:39",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:39"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:39"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:39"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:39"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:39",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:39",
                "type": ""
              }
            ],
            "src": "14:259:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "408:1026:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "455:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "464:6:39"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "472:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "457:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "457:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "457:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "429:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "438:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "425:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "425:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "450:3:39",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "421:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "421:33:39"
                  },
                  "nodeType": "YulIf",
                  "src": "418:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "490:36:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "516:9:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "503:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "503:23:39"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "494:5:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "562:5:39"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "535:26:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "535:33:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "535:33:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "577:15:39",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "587:5:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "577:6:39"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "601:12:39",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "611:2:39",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "605:2:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "622:47:39",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "654:9:39"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "665:2:39"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "650:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "650:18:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "637:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "637:32:39"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "626:7:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "705:7:39"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "678:26:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "678:35:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "678:35:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "722:17:39",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "732:7:39"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "722:6:39"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "748:42:39",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "775:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "786:2:39",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "771:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "771:18:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "758:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "758:32:39"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "748:6:39"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "799:46:39",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "830:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "841:2:39",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "826:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "826:18:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "813:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "813:32:39"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "803:6:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "854:28:39",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "864:18:39",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "858:2:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "909:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "918:6:39"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "926:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "911:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "911:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "911:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "897:6:39"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "905:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "894:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "894:14:39"
                  },
                  "nodeType": "YulIf",
                  "src": "891:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "944:32:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "958:9:39"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "969:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "954:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "954:22:39"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "948:2:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1024:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1033:6:39"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1041:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1026:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1026:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1026:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1003:2:39"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1007:4:39",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "999:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "999:13:39"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1014:7:39"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "995:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "995:27:39"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "988:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "988:35:39"
                  },
                  "nodeType": "YulIf",
                  "src": "985:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1059:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1082:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1069:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1069:16:39"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1063:2:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1108:22:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1110:16:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1110:18:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1110:18:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1100:2:39"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1104:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1097:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1097:10:39"
                  },
                  "nodeType": "YulIf",
                  "src": "1094:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1139:65:39",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1179:2:39"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1183:4:39",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1175:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1175:13:39"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1194:2:39",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1190:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1190:7:39"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1171:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1171:27:39"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1200:2:39"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1167:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1167:36:39"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1152:14:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:52:39"
                  },
                  "variables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "1143:5:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "1220:5:39"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1227:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1213:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1213:17:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1213:17:39"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1276:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1285:6:39"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1293:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1278:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1278:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1278:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1253:2:39"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1257:2:39"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1249:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1249:11:39"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1262:2:39"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1245:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1245:20:39"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1267:7:39"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1242:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:33:39"
                  },
                  "nodeType": "YulIf",
                  "src": "1239:2:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "1328:5:39"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1335:2:39"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1324:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1324:14:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1344:2:39"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1348:2:39"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1340:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1340:11:39"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1353:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1311:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1311:45:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1311:45:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "1380:5:39"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1387:2:39"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1376:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1376:14:39"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1392:2:39"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1372:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1372:23:39"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1397:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1365:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1365:39:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1365:39:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1413:15:39",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "1423:5:39"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1413:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "350:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "361:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "373:6:39",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "381:6:39",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "389:6:39",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "397:6:39",
                "type": ""
              }
            ],
            "src": "278:1156:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1524:189:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1570:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1579:6:39"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1587:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1572:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1572:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1572:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1545:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1554:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1541:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1541:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1566:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1537:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1537:32:39"
                  },
                  "nodeType": "YulIf",
                  "src": "1534:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1605:36:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1631:9:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1618:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1618:23:39"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1609:5:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1677:5:39"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1650:26:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1650:33:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1650:33:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1692:15:39",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1702:5:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1692:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_GenNFT_$1518",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1490:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1501:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1513:6:39",
                "type": ""
              }
            ],
            "src": "1439:274:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1807:189:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1853:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1862:6:39"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1870:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1855:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1855:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1855:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1828:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1837:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1824:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1824:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1849:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1820:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1820:32:39"
                  },
                  "nodeType": "YulIf",
                  "src": "1817:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1888:36:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1914:9:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1901:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1901:23:39"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1892:5:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1960:5:39"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1933:26:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1933:33:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1933:33:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1975:15:39",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1985:5:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1975:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IEvolution_$3469",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1773:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1784:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1796:6:39",
                "type": ""
              }
            ],
            "src": "1718:278:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2104:464:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2150:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2159:6:39"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2167:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2152:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2152:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2152:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2125:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2134:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2121:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2121:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2146:2:39",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2117:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2117:32:39"
                  },
                  "nodeType": "YulIf",
                  "src": "2114:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2185:23:39",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2205:2:39",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2199:5:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2199:9:39"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2189:6:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2217:33:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2239:6:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2247:2:39",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2235:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2235:15:39"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2221:10:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2325:22:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2327:16:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2327:18:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2327:18:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2268:10:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2280:18:39",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2265:2:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2265:34:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2304:10:39"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2316:6:39"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2301:2:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2301:22:39"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2262:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2262:62:39"
                  },
                  "nodeType": "YulIf",
                  "src": "2259:2:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2363:2:39",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2367:10:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2356:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2356:22:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2356:22:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2394:6:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2408:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2402:5:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2402:16:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2387:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2387:32:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2387:32:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2439:6:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2447:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2435:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2435:15:39"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2462:9:39"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2473:2:39",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2458:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2458:18:39"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2452:5:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2452:25:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2428:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2428:50:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2428:50:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2498:6:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2506:2:39",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2494:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2494:15:39"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2521:9:39"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2532:2:39",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2517:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2517:18:39"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2511:5:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2511:25:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2487:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2487:50:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2487:50:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2546:16:39",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2556:6:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2546:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_Type_$1172_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2070:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2081:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2093:6:39",
                "type": ""
              }
            ],
            "src": "2001:567:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2643:120:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2689:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2698:6:39"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2706:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2691:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2691:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2691:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2664:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2673:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2660:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2660:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2685:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2656:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2656:32:39"
                  },
                  "nodeType": "YulIf",
                  "src": "2653:2:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2724:33:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2747:9:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2734:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2734:23:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2724:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2609:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2620:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2632:6:39",
                "type": ""
              }
            ],
            "src": "2573:190:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2849:113:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2895:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2904:6:39"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2912:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2897:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2897:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2897:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2870:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2879:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2866:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2866:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2891:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2862:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2862:32:39"
                  },
                  "nodeType": "YulIf",
                  "src": "2859:2:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2930:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2946:9:39"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2940:5:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2940:16:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2930:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2815:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2826:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2838:6:39",
                "type": ""
              }
            ],
            "src": "2768:194:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3068:102:39",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3078:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3090:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3101:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3086:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3086:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3078:4:39"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3120:9:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3135:6:39"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3151:3:39",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3156:1:39",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3147:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3147:11:39"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3160:1:39",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3143:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3143:19:39"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3131:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3131:32:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3113:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3113:51:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3113:51:39"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3037:9:39",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3048:6:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3059:4:39",
                "type": ""
              }
            ],
            "src": "2967:203:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3274:103:39",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3284:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3296:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3307:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3292:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3292:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3284:4:39"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3326:9:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3341:6:39"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3353:3:39",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3358:10:39",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "3349:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3349:20:39"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3337:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3337:33:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3319:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3319:52:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3319:52:39"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3243:9:39",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3254:6:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3265:4:39",
                "type": ""
              }
            ],
            "src": "3175:202:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3498:102:39",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3508:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3520:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3531:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3516:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3516:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3508:4:39"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3550:9:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3565:6:39"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3581:3:39",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3586:1:39",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3577:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3577:11:39"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3590:1:39",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3573:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3573:19:39"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3561:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3561:32:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3543:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3543:51:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3543:51:39"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_GenNFT_$1518__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3467:9:39",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3478:6:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3489:4:39",
                "type": ""
              }
            ],
            "src": "3382:218:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3725:102:39",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3735:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3747:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3758:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3743:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3743:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3735:4:39"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3777:9:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3792:6:39"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3808:3:39",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3813:1:39",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3804:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3804:11:39"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3817:1:39",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3800:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3800:19:39"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3788:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3788:32:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3770:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3770:51:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3770:51:39"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IEvolution_$3469__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3694:9:39",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3705:6:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3716:4:39",
                "type": ""
              }
            ],
            "src": "3605:222:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4006:228:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4023:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4034:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4016:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4016:21:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4016:21:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4057:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4068:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4053:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4053:18:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4073:2:39",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4046:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4046:30:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4046:30:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4096:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4107:2:39",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4092:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4092:18:39"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4112:34:39",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4085:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4085:62:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4085:62:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4167:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4178:2:39",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4163:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4163:18:39"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4183:8:39",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4156:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4156:36:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4156:36:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4201:27:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4213:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4224:3:39",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4209:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4209:19:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4201:4:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3983:9:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3997:4:39",
                "type": ""
              }
            ],
            "src": "3832:402:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4413:182:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4430:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4441:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4423:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4423:21:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4423:21:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4464:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4475:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4460:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4460:18:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4480:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4453:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4453:30:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4453:30:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4503:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4514:2:39",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4499:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4499:18:39"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4519:34:39",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4492:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4492:62:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4492:62:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4563:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4575:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4586:2:39",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4571:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4571:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4563:4:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4390:9:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4404:4:39",
                "type": ""
              }
            ],
            "src": "4239:356:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4701:76:39",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4711:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4723:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4734:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4719:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4719:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4711:4:39"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4753:9:39"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4764:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4746:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4746:25:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4746:25:39"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4670:9:39",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4681:6:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4692:4:39",
                "type": ""
              }
            ],
            "src": "4600:177:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4826:207:39",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4836:19:39",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4852:2:39",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4846:5:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4846:9:39"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "4836:6:39"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4864:35:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "4886:6:39"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "4894:4:39"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4882:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4882:17:39"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "4868:10:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4974:22:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4976:16:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4976:18:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4976:18:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4917:10:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4929:18:39",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4914:2:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4914:34:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4953:10:39"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4965:6:39"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4950:2:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4950:22:39"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "4911:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4911:62:39"
                  },
                  "nodeType": "YulIf",
                  "src": "4908:2:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5012:2:39",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "5016:10:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5005:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5005:22:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5005:22:39"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "4806:4:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4815:6:39",
                "type": ""
              }
            ],
            "src": "4782:251:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5076:171:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5107:111:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "5128:1:39"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5135:3:39",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5140:10:39",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "5131:3:39"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5131:20:39"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5121:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5121:31:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5121:31:39"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5172:1:39",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5175:4:39",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5165:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5165:15:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5165:15:39"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "5200:1:39"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5203:4:39",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5193:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5193:15:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5193:15:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5096:1:39"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5089:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5089:9:39"
                  },
                  "nodeType": "YulIf",
                  "src": "5086:2:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5227:14:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5236:1:39"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5239:1:39"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "5232:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5232:9:39"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "5227:1:39"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5061:1:39",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5064:1:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "5070:1:39",
                "type": ""
              }
            ],
            "src": "5038:209:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5284:95:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5301:1:39",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5308:3:39",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5313:10:39",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5304:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5304:20:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5294:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5294:31:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5294:31:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5341:1:39",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5344:4:39",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5334:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5334:15:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5334:15:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5365:1:39",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5368:4:39",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5358:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5358:15:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5358:15:39"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "5252:127:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5431:86:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5495:16:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5504:1:39",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5507:1:39",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5497:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5497:12:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5497:12:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5454:5:39"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5465:5:39"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5480:3:39",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5485:1:39",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5476:3:39"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5476:11:39"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5489:1:39",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5472:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5472:19:39"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5461:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5461:31:39"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5451:2:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5451:42:39"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5444:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5444:50:39"
                  },
                  "nodeType": "YulIf",
                  "src": "5441:2:39"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5420:5:39",
                "type": ""
              }
            ],
            "src": "5384:133:39"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let _1 := 32\n        let value_1 := calldataload(add(headStart, _1))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value3, value3) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value3, value3) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocateMemory(add(and(add(_4, 0x1f), not(31)), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value3, value3) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), value3)\n        value3 := array\n    }\n    function abi_decode_tuple_t_contract$_GenNFT_$1518(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IEvolution_$3469(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_struct$_Type_$1172_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 96)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, mload(headStart))\n        mstore(add(memPtr, 32), mload(add(headStart, 32)))\n        mstore(add(memPtr, 64), mload(add(headStart, 64)))\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_contract$_GenNFT_$1518__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IEvolution_$3469__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function allocateMemory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
      "id": 39,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "536:1016:7:-:0;;;735:2;703:34;;748:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:9;887:12;:10;:12::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:9;-1:-1:-1;;;;;909:18:9;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:9;942:43;;909:6;;942:43;-1:-1:-1;829:3:7;:10;;-1:-1:-1;;;;;829:10:7;;;-1:-1:-1;;;;;;829:10:7;;;;;;;849:3;:10;;;;;;;;;;;536:1016;;586:96:21;665:10;586:96;:::o;14:451:39:-;;;188:2;176:9;167:7;163:23;159:32;156:2;;;209:6;201;194:22;156:2;246:9;240:16;265:42;301:5;265:42;:::i;:::-;376:2;361:18;;355:25;326:5;;-1:-1:-1;389:44:39;355:25;389:44;:::i;:::-;452:7;442:17;;;146:319;;;;;:::o;470:142::-;-1:-1:-1;;;;;556:31:39;;546:42;;536:2;;602:1;599;592:12;536:2;526:86;:::o;:::-;536:1016:7;;;;;;",
  "deployedSourceMap": "536:1016:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;530:162:19;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;653:17:7;;;:::i;:::-;;;;;;;:::i;1342:80::-;;;;;;:::i;:::-;;:::i;:::-;;1256:76;;;;;;:::i;:::-;;:::i;981:157::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1700:145:9:-;;;:::i;1148:98:7:-;;;:::i;1068:85:9:-;;;:::i;1432:118:7:-;;;;;;:::i;:::-;;:::i;703:34::-;;;:::i;876:95::-;;;;;;:::i;:::-;;:::i;676:21::-;;;:::i;1994:240:9:-;;;;;;:::i;:::-;;:::i;530:162:19:-;-1:-1:-1;;;530:162:19;;;;;;:::o;653:17:7:-;;;-1:-1:-1;;;;;653:17:7;;:::o;1342:80::-;1291:12:9;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:9;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:9;;1272:68;;;;-1:-1:-1;;;1272:68:9;;;;;;;:::i;:::-;;;;;;;;;1405:3:7::1;:10:::0;;-1:-1:-1;;;;;;1405:10:7::1;-1:-1:-1::0;;;;;1405:10:7;;;::::1;::::0;;;::::1;::::0;;1342:80::o;1256:76::-;1291:12:9;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:9;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:9;;1272:68;;;;-1:-1:-1;;;1272:68:9;;;;;;;:::i;:::-;1315:3:7::1;:10:::0;;-1:-1:-1;;;;;;1315:10:7::1;-1:-1:-1::0;;;;;1315:10:7;;;::::1;::::0;;;::::1;::::0;;1256:76::o;981:157::-;1071:3;;:27;;-1:-1:-1;;;1071:27:7;;1048:4;;1107:7;;-1:-1:-1;;;;;1071:3:7;;;;:20;;:27;;1092:5;;1071:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;;;:43;;;;:::i;:::-;1064:50;981:157;-1:-1:-1;;981:157:7:o;1700:145:9:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:9;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:9;;1272:68;;;;-1:-1:-1;;;1272:68:9;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:9;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:9::1;::::0;;1700:145::o;1148:98:7:-;1222:17;;1148:98;:::o;1068:85:9:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:9;1068:85;:::o;1432:118:7:-;1291:12:9;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:9;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:9;;1272:68;;;;-1:-1:-1;;;1272:68:9;;;;;;;:::i;:::-;1505:17:7::1;:38:::0;1432:118::o;703:34::-;;;;:::o;876:95::-;949:3;;:15;;-1:-1:-1;;;949:15:7;;926:4;;-1:-1:-1;;;;;949:3:7;;:9;;:15;;959:4;;949:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;676:21::-;;;-1:-1:-1;;;;;676:21:7;;:::o;1994:240:9:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:9;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:9;;1272:68;;;;-1:-1:-1;;;1272:68:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:9;::::1;2074:73;;;;-1:-1:-1::0;;;2074:73:9::1;;;;;;;:::i;:::-;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:9;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:9::1;-1:-1:-1::0;;;;;2210:17:9;;;::::1;::::0;;;::::1;::::0;;1994:240::o;586:96:21:-;665:10;586:96;:::o;14:259:39:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;:::-;262:5;84:189;-1:-1:-1;;;84:189:39:o;278:1156::-;;;;;450:3;438:9;429:7;425:23;421:33;418:2;;;472:6;464;457:22;418:2;516:9;503:23;535:33;562:5;535:33;:::i;:::-;587:5;-1:-1:-1;611:2:39;650:18;;;637:32;678:35;637:32;678:35;:::i;:::-;732:7;-1:-1:-1;786:2:39;771:18;;758:32;;-1:-1:-1;841:2:39;826:18;;813:32;864:18;894:14;;;891:2;;;926:6;918;911:22;891:2;969:6;958:9;954:22;944:32;;1014:7;1007:4;1003:2;999:13;995:27;985:2;;1041:6;1033;1026:22;985:2;1082;1069:16;1104:2;1100;1097:10;1094:2;;;1110:18;;:::i;:::-;1152:52;1194:2;1175:13;;-1:-1:-1;;1171:27:39;1167:36;;1152:52;:::i;:::-;1139:65;;1227:2;1220:5;1213:17;1267:7;1262:2;1257;1253;1249:11;1245:20;1242:33;1239:2;;;1293:6;1285;1278:22;1239:2;1353;1348;1344;1340:11;1335:2;1328:5;1324:14;1311:45;1376:14;;1372:23;;;1365:39;;;;408:1026;;;;-1:-1:-1;408:1026:39;;-1:-1:-1;;408:1026:39:o;2001:567::-;;2146:2;2134:9;2125:7;2121:23;2117:32;2114:2;;;2167:6;2159;2152:22;2114:2;2205;2199:9;2247:2;2239:6;2235:15;2316:6;2304:10;2301:22;2280:18;2268:10;2265:34;2262:62;2259:2;;;2327:18;;:::i;:::-;2367:10;2363:2;2356:22;;2408:9;2402:16;2394:6;2387:32;2473:2;2462:9;2458:18;2452:25;2447:2;2439:6;2435:15;2428:50;2532:2;2521:9;2517:18;2511:25;2506:2;2498:6;2494:15;2487:50;2556:6;2546:16;;;2104:464;;;;:::o;2573:190::-;;2685:2;2673:9;2664:7;2660:23;2656:32;2653:2;;;2706:6;2698;2691:22;2653:2;-1:-1:-1;2734:23:39;;2643:120;-1:-1:-1;2643:120:39:o;2768:194::-;;2891:2;2879:9;2870:7;2866:23;2862:32;2859:2;;;2912:6;2904;2897:22;2859:2;-1:-1:-1;2940:16:39;;2849:113;-1:-1:-1;2849:113:39:o;2967:203::-;-1:-1:-1;;;;;3131:32:39;;;;3113:51;;3101:2;3086:18;;3068:102::o;3175:202::-;-1:-1:-1;;;;;;3337:33:39;;;;3319:52;;3307:2;3292:18;;3274:103::o;3832:402::-;4034:2;4016:21;;;4073:2;4053:18;;;4046:30;4112:34;4107:2;4092:18;;4085:62;-1:-1:-1;;;4178:2:39;4163:18;;4156:36;4224:3;4209:19;;4006:228::o;4239:356::-;4441:2;4423:21;;;4460:18;;;4453:30;4519:34;4514:2;4499:18;;4492:62;4586:2;4571:18;;4413:182::o;4600:177::-;4746:25;;;4734:2;4719:18;;4701:76::o;4782:251::-;4852:2;4846:9;4882:17;;;4929:18;4914:34;;4950:22;;;4911:62;4908:2;;;4976:18;;:::i;:::-;5012:2;5005:22;4826:207;;-1:-1:-1;4826:207:39:o;5038:209::-;;5096:1;5086:2;;-1:-1:-1;;;5121:31:39;;5175:4;5172:1;5165:15;5203:4;5128:1;5193:15;5086:2;-1:-1:-1;5232:9:39;;5076:171::o;5252:127::-;5313:10;5308:3;5304:20;5301:1;5294:31;5344:4;5341:1;5334:15;5368:4;5365:1;5358:15;5384:133;-1:-1:-1;;;;;5461:31:39;;5451:42;;5441:2;;5507:1;5504;5497:12;5441:2;5431:86;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.0;\n\nimport \"../oz/utils/structs/EnumerableSet.sol\";\nimport \"../oz/access/Ownable.sol\";\nimport \"../oz/token/ERC20/ERC20.sol\";\nimport \"../oz/token/ERC20/IERC20.sol\";\nimport \"../oz/token/ERC20/utils/SafeERC20.sol\";\nimport \"../oz/token/ERC721/utils/ERC721Holder.sol\";\nimport '../oz/token/ERC721/IERC721.sol';\nimport \"../oz/utils/math/SafeMath.sol\";\nimport \"./GenToken.sol\";\nimport \"./GenNFT.sol\";\n\ninterface IEvolution {\n    function bonus(address user) external view returns (uint);\n}\n\ncontract Proxy is Ownable, ERC721Holder {\n    using SafeERC20 for IERC20;\n    using SafeMath for uint;\n    \n    \n    GenNFT public nft;\n    IEvolution public evo;\n    uint public bonusPerBurnedNFT = 50;\n    \n    constructor(\n        GenNFT _nft,\n        IEvolution _evo\n    ) public {\n        nft = _nft;\n        evo = _evo;\n    }\n    \n    function bonus(address user) public view returns (uint) {\n        return evo.bonus(user);\n    }\n    \n    function getNFTPowerBonusBlocks(uint nftId) external view returns (uint) {\n        return nft.getTypeByTokenId(nftId).bonus % 1000000; //first 6 digits\n    }\n    \n    function getNFTPowerBonus() external view returns (uint) {\n        return bonusPerBurnedNFT;\n    }\n    \n    function updateNFT(GenNFT _nft) public onlyOwner {\n        nft = _nft;\n    }\n    \n    function updateEvo(IEvolution _evo) public onlyOwner {\n        evo = _evo;\n    }\n    \n    function updateBonus(uint _bonusPerBurnedNFT) public onlyOwner {\n        bonusPerBurnedNFT = _bonusPerBurnedNFT;\n    }\n}",
  "sourcePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/Proxy.sol",
  "ast": {
    "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/Proxy.sol",
    "exportedSymbols": {
      "Address": [
        6274
      ],
      "Context": [
        6297
      ],
      "ERC165": [
        6524
      ],
      "ERC20": [
        4299
      ],
      "ERC721": [
        5421
      ],
      "ERC721Enumerable": [
        5893
      ],
      "ERC721Holder": [
        5978
      ],
      "EnumerableSet": [
        7363
      ],
      "GenNFT": [
        1518
      ],
      "GenToken": [
        1533
      ],
      "IERC165": [
        6536
      ],
      "IERC20": [
        4377
      ],
      "IERC721": [
        5537
      ],
      "IERC721Enumerable": [
        5924
      ],
      "IERC721Metadata": [
        5951
      ],
      "IERC721Receiver": [
        5555
      ],
      "IEvolution": [
        3469
      ],
      "Ownable": [
        3798
      ],
      "OwnableToken": [
        3449
      ],
      "Proxy": [
        3583
      ],
      "SafeERC20": [
        4600
      ],
      "SafeMath": [
        6848
      ],
      "Strings": [
        6500
      ]
    },
    "id": 3584,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3451,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:7"
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/structs/EnumerableSet.sol",
        "file": "../oz/utils/structs/EnumerableSet.sol",
        "id": 3452,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 7364,
        "src": "57:47:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/access/Ownable.sol",
        "file": "../oz/access/Ownable.sol",
        "id": 3453,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 3799,
        "src": "105:34:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/ERC20.sol",
        "file": "../oz/token/ERC20/ERC20.sol",
        "id": 3454,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 4300,
        "src": "140:37:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/IERC20.sol",
        "file": "../oz/token/ERC20/IERC20.sol",
        "id": 3455,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 4378,
        "src": "178:38:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/utils/SafeERC20.sol",
        "file": "../oz/token/ERC20/utils/SafeERC20.sol",
        "id": 3456,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 4601,
        "src": "217:47:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/utils/ERC721Holder.sol",
        "file": "../oz/token/ERC721/utils/ERC721Holder.sol",
        "id": 3457,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 5979,
        "src": "265:51:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/IERC721.sol",
        "file": "../oz/token/ERC721/IERC721.sol",
        "id": 3458,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 5538,
        "src": "317:40:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/math/SafeMath.sol",
        "file": "../oz/utils/math/SafeMath.sol",
        "id": 3459,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 6849,
        "src": "358:39:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/GenToken.sol",
        "file": "./GenToken.sol",
        "id": 3460,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 1534,
        "src": "398:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/GenNFT.sol",
        "file": "./GenNFT.sol",
        "id": 3461,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 1519,
        "src": "423:22:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 3469,
        "linearizedBaseContracts": [
          3469
        ],
        "name": "IEvolution",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "d8cb4aa3",
            "id": 3468,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "bonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3463,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 3468,
                  "src": "489:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "488:14:7"
            },
            "returnParameters": {
              "id": 3467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3466,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3468,
                  "src": "526:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3465,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "525:6:7"
            },
            "scope": 3469,
            "src": "474:58:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3584,
        "src": "447:87:7"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3470,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3798,
              "src": "554:7:7"
            },
            "id": 3471,
            "nodeType": "InheritanceSpecifier",
            "src": "554:7:7"
          },
          {
            "baseName": {
              "id": 3472,
              "name": "ERC721Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5978,
              "src": "563:12:7"
            },
            "id": 3473,
            "nodeType": "InheritanceSpecifier",
            "src": "563:12:7"
          }
        ],
        "contractDependencies": [
          3798,
          5555,
          5978,
          6297
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3583,
        "linearizedBaseContracts": [
          3583,
          5978,
          5555,
          3798,
          6297
        ],
        "name": "Proxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3477,
            "libraryName": {
              "id": 3474,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4600,
              "src": "588:9:7"
            },
            "nodeType": "UsingForDirective",
            "src": "582:27:7",
            "typeName": {
              "id": 3476,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3475,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4377,
                "src": "602:6:7"
              },
              "referencedDeclaration": 4377,
              "src": "602:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4377",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 3480,
            "libraryName": {
              "id": 3478,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6848,
              "src": "620:8:7"
            },
            "nodeType": "UsingForDirective",
            "src": "614:24:7",
            "typeName": {
              "id": 3479,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "633:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "47ccca02",
            "id": 3483,
            "mutability": "mutable",
            "name": "nft",
            "nodeType": "VariableDeclaration",
            "scope": 3583,
            "src": "653:17:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GenNFT_$1518",
              "typeString": "contract GenNFT"
            },
            "typeName": {
              "id": 3482,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3481,
                "name": "GenNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1518,
                "src": "653:6:7"
              },
              "referencedDeclaration": 1518,
              "src": "653:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GenNFT_$1518",
                "typeString": "contract GenNFT"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f2ef62dd",
            "id": 3486,
            "mutability": "mutable",
            "name": "evo",
            "nodeType": "VariableDeclaration",
            "scope": 3583,
            "src": "676:21:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IEvolution_$3469",
              "typeString": "contract IEvolution"
            },
            "typeName": {
              "id": 3485,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3484,
                "name": "IEvolution",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3469,
                "src": "676:10:7"
              },
              "referencedDeclaration": 3469,
              "src": "676:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEvolution_$3469",
                "typeString": "contract IEvolution"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cc4d0884",
            "id": 3489,
            "mutability": "mutable",
            "name": "bonusPerBurnedNFT",
            "nodeType": "VariableDeclaration",
            "scope": 3583,
            "src": "703:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3487,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "703:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 3488,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "735:2:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3506,
              "nodeType": "Block",
              "src": "819:47:7",
              "statements": [
                {
                  "expression": {
                    "id": 3500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3498,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3483,
                      "src": "829:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GenNFT_$1518",
                        "typeString": "contract GenNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3499,
                      "name": "_nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3492,
                      "src": "835:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GenNFT_$1518",
                        "typeString": "contract GenNFT"
                      }
                    },
                    "src": "829:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GenNFT_$1518",
                      "typeString": "contract GenNFT"
                    }
                  },
                  "id": 3501,
                  "nodeType": "ExpressionStatement",
                  "src": "829:10:7"
                },
                {
                  "expression": {
                    "id": 3504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3502,
                      "name": "evo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3486,
                      "src": "849:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEvolution_$3469",
                        "typeString": "contract IEvolution"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3503,
                      "name": "_evo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3495,
                      "src": "855:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEvolution_$3469",
                        "typeString": "contract IEvolution"
                      }
                    },
                    "src": "849:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEvolution_$3469",
                      "typeString": "contract IEvolution"
                    }
                  },
                  "id": 3505,
                  "nodeType": "ExpressionStatement",
                  "src": "849:10:7"
                }
              ]
            },
            "id": 3507,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3492,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nodeType": "VariableDeclaration",
                  "scope": 3507,
                  "src": "769:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GenNFT_$1518",
                    "typeString": "contract GenNFT"
                  },
                  "typeName": {
                    "id": 3491,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3490,
                      "name": "GenNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1518,
                      "src": "769:6:7"
                    },
                    "referencedDeclaration": 1518,
                    "src": "769:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GenNFT_$1518",
                      "typeString": "contract GenNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3495,
                  "mutability": "mutable",
                  "name": "_evo",
                  "nodeType": "VariableDeclaration",
                  "scope": 3507,
                  "src": "790:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEvolution_$3469",
                    "typeString": "contract IEvolution"
                  },
                  "typeName": {
                    "id": 3494,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3493,
                      "name": "IEvolution",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3469,
                      "src": "790:10:7"
                    },
                    "referencedDeclaration": 3469,
                    "src": "790:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEvolution_$3469",
                      "typeString": "contract IEvolution"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "759:52:7"
            },
            "returnParameters": {
              "id": 3497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "819:0:7"
            },
            "scope": 3583,
            "src": "748:118:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3519,
              "nodeType": "Block",
              "src": "932:39:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3516,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3509,
                        "src": "959:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3514,
                        "name": "evo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3486,
                        "src": "949:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEvolution_$3469",
                          "typeString": "contract IEvolution"
                        }
                      },
                      "id": 3515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "bonus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3468,
                      "src": "949:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "949:15:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3513,
                  "id": 3518,
                  "nodeType": "Return",
                  "src": "942:22:7"
                }
              ]
            },
            "functionSelector": "d8cb4aa3",
            "id": 3520,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3509,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 3520,
                  "src": "891:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "890:14:7"
            },
            "returnParameters": {
              "id": 3513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3512,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3520,
                  "src": "926:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3511,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "925:6:7"
            },
            "scope": 3583,
            "src": "876:95:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3535,
              "nodeType": "Block",
              "src": "1054:84:7",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 3529,
                            "name": "nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3522,
                            "src": "1092:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 3527,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3483,
                            "src": "1071:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GenNFT_$1518",
                              "typeString": "contract GenNFT"
                            }
                          },
                          "id": 3528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTypeByTokenId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1422,
                          "src": "1071:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Type_$1172_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (struct GenNFT.Type memory)"
                          }
                        },
                        "id": 3530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1071:27:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Type_$1172_memory_ptr",
                          "typeString": "struct GenNFT.Type memory"
                        }
                      },
                      "id": 3531,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "bonus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1169,
                      "src": "1071:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "hexValue": "31303030303030",
                      "id": 3532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1107:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1000000"
                    },
                    "src": "1071:43:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3526,
                  "id": 3534,
                  "nodeType": "Return",
                  "src": "1064:50:7"
                }
              ]
            },
            "functionSelector": "6a639931",
            "id": 3536,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNFTPowerBonusBlocks",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3522,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3536,
                  "src": "1013:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3521,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1012:12:7"
            },
            "returnParameters": {
              "id": 3526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3525,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3536,
                  "src": "1048:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3524,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1047:6:7"
            },
            "scope": 3583,
            "src": "981:157:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3543,
              "nodeType": "Block",
              "src": "1205:41:7",
              "statements": [
                {
                  "expression": {
                    "id": 3541,
                    "name": "bonusPerBurnedNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3489,
                    "src": "1222:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3540,
                  "id": 3542,
                  "nodeType": "Return",
                  "src": "1215:24:7"
                }
              ]
            },
            "functionSelector": "72c1bc19",
            "id": 3544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNFTPowerBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1173:2:7"
            },
            "returnParameters": {
              "id": 3540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3539,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3544,
                  "src": "1199:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3538,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1199:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1198:6:7"
            },
            "scope": 3583,
            "src": "1148:98:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3556,
              "nodeType": "Block",
              "src": "1305:27:7",
              "statements": [
                {
                  "expression": {
                    "id": 3554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3552,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3483,
                      "src": "1315:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GenNFT_$1518",
                        "typeString": "contract GenNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3553,
                      "name": "_nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3547,
                      "src": "1321:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GenNFT_$1518",
                        "typeString": "contract GenNFT"
                      }
                    },
                    "src": "1315:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GenNFT_$1518",
                      "typeString": "contract GenNFT"
                    }
                  },
                  "id": 3555,
                  "nodeType": "ExpressionStatement",
                  "src": "1315:10:7"
                }
              ]
            },
            "functionSelector": "5be68e93",
            "id": 3557,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3550,
                "modifierName": {
                  "id": 3549,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3747,
                  "src": "1295:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1295:9:7"
              }
            ],
            "name": "updateNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3547,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nodeType": "VariableDeclaration",
                  "scope": 3557,
                  "src": "1275:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GenNFT_$1518",
                    "typeString": "contract GenNFT"
                  },
                  "typeName": {
                    "id": 3546,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3545,
                      "name": "GenNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1518,
                      "src": "1275:6:7"
                    },
                    "referencedDeclaration": 1518,
                    "src": "1275:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GenNFT_$1518",
                      "typeString": "contract GenNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1274:13:7"
            },
            "returnParameters": {
              "id": 3551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1305:0:7"
            },
            "scope": 3583,
            "src": "1256:76:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3569,
              "nodeType": "Block",
              "src": "1395:27:7",
              "statements": [
                {
                  "expression": {
                    "id": 3567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3565,
                      "name": "evo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3486,
                      "src": "1405:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEvolution_$3469",
                        "typeString": "contract IEvolution"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3566,
                      "name": "_evo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3560,
                      "src": "1411:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEvolution_$3469",
                        "typeString": "contract IEvolution"
                      }
                    },
                    "src": "1405:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEvolution_$3469",
                      "typeString": "contract IEvolution"
                    }
                  },
                  "id": 3568,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:10:7"
                }
              ]
            },
            "functionSelector": "56e585f3",
            "id": 3570,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3563,
                "modifierName": {
                  "id": 3562,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3747,
                  "src": "1385:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1385:9:7"
              }
            ],
            "name": "updateEvo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3560,
                  "mutability": "mutable",
                  "name": "_evo",
                  "nodeType": "VariableDeclaration",
                  "scope": 3570,
                  "src": "1361:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEvolution_$3469",
                    "typeString": "contract IEvolution"
                  },
                  "typeName": {
                    "id": 3559,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3558,
                      "name": "IEvolution",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3469,
                      "src": "1361:10:7"
                    },
                    "referencedDeclaration": 3469,
                    "src": "1361:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEvolution_$3469",
                      "typeString": "contract IEvolution"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1360:17:7"
            },
            "returnParameters": {
              "id": 3564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1395:0:7"
            },
            "scope": 3583,
            "src": "1342:80:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3581,
              "nodeType": "Block",
              "src": "1495:55:7",
              "statements": [
                {
                  "expression": {
                    "id": 3579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3577,
                      "name": "bonusPerBurnedNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3489,
                      "src": "1505:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3578,
                      "name": "_bonusPerBurnedNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3572,
                      "src": "1525:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1505:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3580,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:38:7"
                }
              ]
            },
            "functionSelector": "9f8dbb7b",
            "id": 3582,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3575,
                "modifierName": {
                  "id": 3574,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3747,
                  "src": "1485:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1485:9:7"
              }
            ],
            "name": "updateBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3572,
                  "mutability": "mutable",
                  "name": "_bonusPerBurnedNFT",
                  "nodeType": "VariableDeclaration",
                  "scope": 3582,
                  "src": "1453:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3571,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1453:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1452:25:7"
            },
            "returnParameters": {
              "id": 3576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1495:0:7"
            },
            "scope": 3583,
            "src": "1432:118:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3584,
        "src": "536:1016:7"
      }
    ],
    "src": "33:1519:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/Proxy.sol",
    "exportedSymbols": {
      "Address": [
        6274
      ],
      "Context": [
        6297
      ],
      "ERC165": [
        6524
      ],
      "ERC20": [
        4299
      ],
      "ERC721": [
        5421
      ],
      "ERC721Enumerable": [
        5893
      ],
      "ERC721Holder": [
        5978
      ],
      "EnumerableSet": [
        7363
      ],
      "GenNFT": [
        1518
      ],
      "GenToken": [
        1533
      ],
      "IERC165": [
        6536
      ],
      "IERC20": [
        4377
      ],
      "IERC721": [
        5537
      ],
      "IERC721Enumerable": [
        5924
      ],
      "IERC721Metadata": [
        5951
      ],
      "IERC721Receiver": [
        5555
      ],
      "IEvolution": [
        3469
      ],
      "Ownable": [
        3798
      ],
      "OwnableToken": [
        3449
      ],
      "Proxy": [
        3583
      ],
      "SafeERC20": [
        4600
      ],
      "SafeMath": [
        6848
      ],
      "Strings": [
        6500
      ]
    },
    "id": 3584,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3451,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:7"
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/structs/EnumerableSet.sol",
        "file": "../oz/utils/structs/EnumerableSet.sol",
        "id": 3452,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 7364,
        "src": "57:47:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/access/Ownable.sol",
        "file": "../oz/access/Ownable.sol",
        "id": 3453,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 3799,
        "src": "105:34:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/ERC20.sol",
        "file": "../oz/token/ERC20/ERC20.sol",
        "id": 3454,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 4300,
        "src": "140:37:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/IERC20.sol",
        "file": "../oz/token/ERC20/IERC20.sol",
        "id": 3455,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 4378,
        "src": "178:38:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/utils/SafeERC20.sol",
        "file": "../oz/token/ERC20/utils/SafeERC20.sol",
        "id": 3456,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 4601,
        "src": "217:47:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/utils/ERC721Holder.sol",
        "file": "../oz/token/ERC721/utils/ERC721Holder.sol",
        "id": 3457,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 5979,
        "src": "265:51:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/IERC721.sol",
        "file": "../oz/token/ERC721/IERC721.sol",
        "id": 3458,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 5538,
        "src": "317:40:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/math/SafeMath.sol",
        "file": "../oz/utils/math/SafeMath.sol",
        "id": 3459,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 6849,
        "src": "358:39:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/GenToken.sol",
        "file": "./GenToken.sol",
        "id": 3460,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 1534,
        "src": "398:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/GenNFT.sol",
        "file": "./GenNFT.sol",
        "id": 3461,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 1519,
        "src": "423:22:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 3469,
        "linearizedBaseContracts": [
          3469
        ],
        "name": "IEvolution",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "d8cb4aa3",
            "id": 3468,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "bonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3463,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 3468,
                  "src": "489:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "488:14:7"
            },
            "returnParameters": {
              "id": 3467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3466,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3468,
                  "src": "526:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3465,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "525:6:7"
            },
            "scope": 3469,
            "src": "474:58:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3584,
        "src": "447:87:7"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3470,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3798,
              "src": "554:7:7"
            },
            "id": 3471,
            "nodeType": "InheritanceSpecifier",
            "src": "554:7:7"
          },
          {
            "baseName": {
              "id": 3472,
              "name": "ERC721Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5978,
              "src": "563:12:7"
            },
            "id": 3473,
            "nodeType": "InheritanceSpecifier",
            "src": "563:12:7"
          }
        ],
        "contractDependencies": [
          3798,
          5555,
          5978,
          6297
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3583,
        "linearizedBaseContracts": [
          3583,
          5978,
          5555,
          3798,
          6297
        ],
        "name": "Proxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3477,
            "libraryName": {
              "id": 3474,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4600,
              "src": "588:9:7"
            },
            "nodeType": "UsingForDirective",
            "src": "582:27:7",
            "typeName": {
              "id": 3476,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3475,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4377,
                "src": "602:6:7"
              },
              "referencedDeclaration": 4377,
              "src": "602:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4377",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 3480,
            "libraryName": {
              "id": 3478,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6848,
              "src": "620:8:7"
            },
            "nodeType": "UsingForDirective",
            "src": "614:24:7",
            "typeName": {
              "id": 3479,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "633:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "47ccca02",
            "id": 3483,
            "mutability": "mutable",
            "name": "nft",
            "nodeType": "VariableDeclaration",
            "scope": 3583,
            "src": "653:17:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GenNFT_$1518",
              "typeString": "contract GenNFT"
            },
            "typeName": {
              "id": 3482,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3481,
                "name": "GenNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1518,
                "src": "653:6:7"
              },
              "referencedDeclaration": 1518,
              "src": "653:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GenNFT_$1518",
                "typeString": "contract GenNFT"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f2ef62dd",
            "id": 3486,
            "mutability": "mutable",
            "name": "evo",
            "nodeType": "VariableDeclaration",
            "scope": 3583,
            "src": "676:21:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IEvolution_$3469",
              "typeString": "contract IEvolution"
            },
            "typeName": {
              "id": 3485,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3484,
                "name": "IEvolution",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3469,
                "src": "676:10:7"
              },
              "referencedDeclaration": 3469,
              "src": "676:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEvolution_$3469",
                "typeString": "contract IEvolution"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cc4d0884",
            "id": 3489,
            "mutability": "mutable",
            "name": "bonusPerBurnedNFT",
            "nodeType": "VariableDeclaration",
            "scope": 3583,
            "src": "703:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3487,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "703:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 3488,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "735:2:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3506,
              "nodeType": "Block",
              "src": "819:47:7",
              "statements": [
                {
                  "expression": {
                    "id": 3500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3498,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3483,
                      "src": "829:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GenNFT_$1518",
                        "typeString": "contract GenNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3499,
                      "name": "_nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3492,
                      "src": "835:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GenNFT_$1518",
                        "typeString": "contract GenNFT"
                      }
                    },
                    "src": "829:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GenNFT_$1518",
                      "typeString": "contract GenNFT"
                    }
                  },
                  "id": 3501,
                  "nodeType": "ExpressionStatement",
                  "src": "829:10:7"
                },
                {
                  "expression": {
                    "id": 3504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3502,
                      "name": "evo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3486,
                      "src": "849:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEvolution_$3469",
                        "typeString": "contract IEvolution"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3503,
                      "name": "_evo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3495,
                      "src": "855:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEvolution_$3469",
                        "typeString": "contract IEvolution"
                      }
                    },
                    "src": "849:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEvolution_$3469",
                      "typeString": "contract IEvolution"
                    }
                  },
                  "id": 3505,
                  "nodeType": "ExpressionStatement",
                  "src": "849:10:7"
                }
              ]
            },
            "id": 3507,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3492,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nodeType": "VariableDeclaration",
                  "scope": 3507,
                  "src": "769:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GenNFT_$1518",
                    "typeString": "contract GenNFT"
                  },
                  "typeName": {
                    "id": 3491,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3490,
                      "name": "GenNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1518,
                      "src": "769:6:7"
                    },
                    "referencedDeclaration": 1518,
                    "src": "769:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GenNFT_$1518",
                      "typeString": "contract GenNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3495,
                  "mutability": "mutable",
                  "name": "_evo",
                  "nodeType": "VariableDeclaration",
                  "scope": 3507,
                  "src": "790:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEvolution_$3469",
                    "typeString": "contract IEvolution"
                  },
                  "typeName": {
                    "id": 3494,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3493,
                      "name": "IEvolution",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3469,
                      "src": "790:10:7"
                    },
                    "referencedDeclaration": 3469,
                    "src": "790:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEvolution_$3469",
                      "typeString": "contract IEvolution"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "759:52:7"
            },
            "returnParameters": {
              "id": 3497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "819:0:7"
            },
            "scope": 3583,
            "src": "748:118:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3519,
              "nodeType": "Block",
              "src": "932:39:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3516,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3509,
                        "src": "959:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3514,
                        "name": "evo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3486,
                        "src": "949:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEvolution_$3469",
                          "typeString": "contract IEvolution"
                        }
                      },
                      "id": 3515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "bonus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3468,
                      "src": "949:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "949:15:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3513,
                  "id": 3518,
                  "nodeType": "Return",
                  "src": "942:22:7"
                }
              ]
            },
            "functionSelector": "d8cb4aa3",
            "id": 3520,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3509,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 3520,
                  "src": "891:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "890:14:7"
            },
            "returnParameters": {
              "id": 3513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3512,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3520,
                  "src": "926:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3511,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "925:6:7"
            },
            "scope": 3583,
            "src": "876:95:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3535,
              "nodeType": "Block",
              "src": "1054:84:7",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 3529,
                            "name": "nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3522,
                            "src": "1092:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 3527,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3483,
                            "src": "1071:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GenNFT_$1518",
                              "typeString": "contract GenNFT"
                            }
                          },
                          "id": 3528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTypeByTokenId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1422,
                          "src": "1071:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Type_$1172_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (struct GenNFT.Type memory)"
                          }
                        },
                        "id": 3530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1071:27:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Type_$1172_memory_ptr",
                          "typeString": "struct GenNFT.Type memory"
                        }
                      },
                      "id": 3531,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "bonus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1169,
                      "src": "1071:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "hexValue": "31303030303030",
                      "id": 3532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1107:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1000000"
                    },
                    "src": "1071:43:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3526,
                  "id": 3534,
                  "nodeType": "Return",
                  "src": "1064:50:7"
                }
              ]
            },
            "functionSelector": "6a639931",
            "id": 3536,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNFTPowerBonusBlocks",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3522,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3536,
                  "src": "1013:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3521,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1012:12:7"
            },
            "returnParameters": {
              "id": 3526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3525,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3536,
                  "src": "1048:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3524,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1047:6:7"
            },
            "scope": 3583,
            "src": "981:157:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3543,
              "nodeType": "Block",
              "src": "1205:41:7",
              "statements": [
                {
                  "expression": {
                    "id": 3541,
                    "name": "bonusPerBurnedNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3489,
                    "src": "1222:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3540,
                  "id": 3542,
                  "nodeType": "Return",
                  "src": "1215:24:7"
                }
              ]
            },
            "functionSelector": "72c1bc19",
            "id": 3544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNFTPowerBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1173:2:7"
            },
            "returnParameters": {
              "id": 3540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3539,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3544,
                  "src": "1199:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3538,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1199:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1198:6:7"
            },
            "scope": 3583,
            "src": "1148:98:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3556,
              "nodeType": "Block",
              "src": "1305:27:7",
              "statements": [
                {
                  "expression": {
                    "id": 3554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3552,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3483,
                      "src": "1315:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GenNFT_$1518",
                        "typeString": "contract GenNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3553,
                      "name": "_nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3547,
                      "src": "1321:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GenNFT_$1518",
                        "typeString": "contract GenNFT"
                      }
                    },
                    "src": "1315:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GenNFT_$1518",
                      "typeString": "contract GenNFT"
                    }
                  },
                  "id": 3555,
                  "nodeType": "ExpressionStatement",
                  "src": "1315:10:7"
                }
              ]
            },
            "functionSelector": "5be68e93",
            "id": 3557,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3550,
                "modifierName": {
                  "id": 3549,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3747,
                  "src": "1295:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1295:9:7"
              }
            ],
            "name": "updateNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3547,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nodeType": "VariableDeclaration",
                  "scope": 3557,
                  "src": "1275:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GenNFT_$1518",
                    "typeString": "contract GenNFT"
                  },
                  "typeName": {
                    "id": 3546,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3545,
                      "name": "GenNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1518,
                      "src": "1275:6:7"
                    },
                    "referencedDeclaration": 1518,
                    "src": "1275:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GenNFT_$1518",
                      "typeString": "contract GenNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1274:13:7"
            },
            "returnParameters": {
              "id": 3551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1305:0:7"
            },
            "scope": 3583,
            "src": "1256:76:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3569,
              "nodeType": "Block",
              "src": "1395:27:7",
              "statements": [
                {
                  "expression": {
                    "id": 3567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3565,
                      "name": "evo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3486,
                      "src": "1405:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEvolution_$3469",
                        "typeString": "contract IEvolution"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3566,
                      "name": "_evo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3560,
                      "src": "1411:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEvolution_$3469",
                        "typeString": "contract IEvolution"
                      }
                    },
                    "src": "1405:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEvolution_$3469",
                      "typeString": "contract IEvolution"
                    }
                  },
                  "id": 3568,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:10:7"
                }
              ]
            },
            "functionSelector": "56e585f3",
            "id": 3570,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3563,
                "modifierName": {
                  "id": 3562,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3747,
                  "src": "1385:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1385:9:7"
              }
            ],
            "name": "updateEvo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3560,
                  "mutability": "mutable",
                  "name": "_evo",
                  "nodeType": "VariableDeclaration",
                  "scope": 3570,
                  "src": "1361:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEvolution_$3469",
                    "typeString": "contract IEvolution"
                  },
                  "typeName": {
                    "id": 3559,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3558,
                      "name": "IEvolution",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3469,
                      "src": "1361:10:7"
                    },
                    "referencedDeclaration": 3469,
                    "src": "1361:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEvolution_$3469",
                      "typeString": "contract IEvolution"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1360:17:7"
            },
            "returnParameters": {
              "id": 3564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1395:0:7"
            },
            "scope": 3583,
            "src": "1342:80:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3581,
              "nodeType": "Block",
              "src": "1495:55:7",
              "statements": [
                {
                  "expression": {
                    "id": 3579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3577,
                      "name": "bonusPerBurnedNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3489,
                      "src": "1505:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3578,
                      "name": "_bonusPerBurnedNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3572,
                      "src": "1525:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1505:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3580,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:38:7"
                }
              ]
            },
            "functionSelector": "9f8dbb7b",
            "id": 3582,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3575,
                "modifierName": {
                  "id": 3574,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3747,
                  "src": "1485:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1485:9:7"
              }
            ],
            "name": "updateBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3572,
                  "mutability": "mutable",
                  "name": "_bonusPerBurnedNFT",
                  "nodeType": "VariableDeclaration",
                  "scope": 3582,
                  "src": "1453:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3571,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1453:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1452:25:7"
            },
            "returnParameters": {
              "id": 3576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1495:0:7"
            },
            "scope": 3583,
            "src": "1432:118:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3584,
        "src": "536:1016:7"
      }
    ],
    "src": "33:1519:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "56": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x443Fe2aDb210efc88f098e830610f4A18830f922",
      "transactionHash": "0x90a03b4f18d8313183b8990ea9814cecbf7da4fa906e4022f56a4c0d4853d763"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-08T12:53:23.061Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}