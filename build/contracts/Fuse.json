{
  "contractName": "Fuse",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract GenNFT",
          "name": "_nft",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "nft",
      "outputs": [
        {
          "internalType": "contract GenNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_nftIds",
          "type": "uint256[]"
        }
      ],
      "name": "fuseNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract GenNFT\",\"name\":\"_nft\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_nftIds\",\"type\":\"uint256[]\"}],\"name\":\"fuseNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract GenNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/Fuse.sol\":\"Fuse\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/Fuse.sol\":{\"keccak256\":\"0xc4b302856af9f0eb79102dc3ddb52da8af9f0f93bed8851ca2df9e19cc7697ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cedc8dce873931dbca47259e4d25e99eca32d460a53c6086431596e4c4a9445b\",\"dweb:/ipfs/QmWPfj9bNjJSTsU8WMxw2BL3qwD4ovUvksEzVLaM3pw6qz\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/GenNFT.sol\":{\"keccak256\":\"0xe74a7771cda36fe71e5c876142efeea00a5aea5ad322f0b77bb54ee48b515d84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd1964ebc7d21534df99a802cec9974ae6071f9172cb4b6d5c72458b288bf3a\",\"dweb:/ipfs/QmX5wGQVHTLxxU2Xdk27ZuMpFujbws2qaadUecTR9qd26M\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x964c4f1313db157aee9a5d71350cbbf5d9ed969070480e99fd750c2b641f43d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c87a7f19ea7863f29768ad86b3962d7f188d68d2dde228a2ffa553008dee589\",\"dweb:/ipfs/QmXTj4AJAwQBe1SQXmtnuA3e1Ed91ANSMp9B89rKbuENUK\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xf94543a2c0426f4579e2414be5087a34454de9dea24517bac2278f8edd16f8cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://459f5cc541238e27d09911bbda1d39c6f87d2bef63caa3ae9431f98f53926376\",\"dweb:/ipfs/QmePektGzfqYfXMUSjWir2hkaNoxhEFkaDPgHEhbe2uacw\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456\",\"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x3dce5847e70c056ef0f7cf91cb9a0067cf90784794017a45c1211cde7ed1c08c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba34b5028b6a297467a7364d9af182649dee0611a0f9620ec27ce10647885cad\",\"dweb:/ipfs/QmWhGtHDcAYWA31f3Ze9izeh3SPMRzcFagTUwxExLg3sRc\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df5776161e3226ac31bfb919dfe5f42e173a08293fadb4ffa90ffb55e76869d7\",\"dweb:/ipfs/QmXtKfvWj1v6oha8urbnw4RmjSpmQjZsGGqK5qk5trK4nH\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62\",\"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0xd260defa45bc1bbdf5e6d74298fb2705bf058c3d2beb17fb1158fa1a430c5024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ada67d8251f88b8c3df5a79d9d4930fd7061634fb110478c407b4d9abc3e120\",\"dweb:/ipfs/QmeEdLBhUuF7C2ZtzTWjSCAbcemFtma8Gh91pFY3djaTz3\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]},\"/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x71e0d1cc75b67306382e055b789b6d3ffe34a9e2e55380d3c9895a36a42229e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea28aa69470f0f5bb38095c59d2d68db03fc52faa5640de4486a188ecc168870\",\"dweb:/ipfs/QmdwRX791f2gdkxLfzQLcyx3ZLvSjGd2wdX8gXFi8sH2uW\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806308f673d814610067578063150b7a021461007c57806347ccca02146100a5578063715018a6146100ba5780638da5cb5b146100c2578063f2fde38b146100ca575b600080fd5b61007a610075366004610c40565b6100dd565b005b61008f61008a366004610b84565b6109ca565b60405161009c9190610d56565b60405180910390f35b6100ad6109da565b60405161009c9190610d42565b61007a6109e9565b6100ad610a72565b61007a6100d8366004610b45565b610a81565b80516004146101075760405162461bcd60e51b81526004016100fe90610e0c565b60405180910390fd5b600154815133916001600160a01b031690636352211e90849060009061013d57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b81526004016101619190610e96565b60206040518083038186803b15801561017957600080fd5b505afa15801561018d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b19190610b68565b6001600160a01b0316146101d75760405162461bcd60e51b81526004016100fe90610ddf565b60018054825133926001600160a01b0390921691636352211e91859190811061021057634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b81526004016102349190610e96565b60206040518083038186803b15801561024c57600080fd5b505afa158015610260573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102849190610b68565b6001600160a01b0316146102aa5760405162461bcd60e51b81526004016100fe90610ddf565b600154815133916001600160a01b031690636352211e90849060029081106102e257634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b81526004016103069190610e96565b60206040518083038186803b15801561031e57600080fd5b505afa158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103569190610b68565b6001600160a01b03161461037c5760405162461bcd60e51b81526004016100fe90610ddf565b600154815133916001600160a01b031690636352211e90849060039081106103b457634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b81526004016103d89190610e96565b60206040518083038186803b1580156103f057600080fd5b505afa158015610404573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104289190610b68565b6001600160a01b03161461044e5760405162461bcd60e51b81526004016100fe90610ddf565b60015481516000916001600160a01b0316906386620a46908490849061048457634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b81526004016104a89190610e96565b60606040518083038186803b1580156104c057600080fd5b505afa1580156104d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f89190610ce7565b5190506008811061051b5760405162461bcd60e51b81526004016100fe90610db1565b60018054835183926001600160a01b03909216916386620a4691869190811061055457634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b81526004016105789190610e96565b60606040518083038186803b15801561059057600080fd5b505afa1580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c89190610ce7565b51146105e65760405162461bcd60e51b81526004016100fe90610e6e565b600154825182916001600160a01b0316906386620a46908590600290811061061e57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b81526004016106429190610e96565b60606040518083038186803b15801561065a57600080fd5b505afa15801561066e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106929190610ce7565b51146106b05760405162461bcd60e51b81526004016100fe90610e6e565b600154825182916001600160a01b0316906386620a4690859060039081106106e857634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b815260040161070c9190610e96565b60606040518083038186803b15801561072457600080fd5b505afa158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c9190610ce7565b511461077a5760405162461bcd60e51b81526004016100fe90610e6e565b60015482516001600160a01b039091169063095660119084906000906107b057634e487b7160e01b600052603260045260246000fd5b60200260200101518360016107c59190610ed7565b6040518363ffffffff1660e01b81526004016107e2929190610e9f565b600060405180830381600087803b1580156107fc57600080fd5b505af1158015610810573d6000803e3d6000fd5b50506001805485516001600160a01b03909116935063095660119250859190811061084b57634e487b7160e01b600052603260045260246000fd5b602002602001015160006040518363ffffffff1660e01b8152600401610872929190610e9f565b600060405180830381600087803b15801561088c57600080fd5b505af11580156108a0573d6000803e3d6000fd5b505060015484516001600160a01b03909116925063095660119150849060029081106108dc57634e487b7160e01b600052603260045260246000fd5b602002602001015160006040518363ffffffff1660e01b8152600401610903929190610e9f565b600060405180830381600087803b15801561091d57600080fd5b505af1158015610931573d6000803e3d6000fd5b505060015484516001600160a01b039091169250630956601191508490600390811061096d57634e487b7160e01b600052603260045260246000fd5b602002602001015160006040518363ffffffff1660e01b8152600401610994929190610e9f565b600060405180830381600087803b1580156109ae57600080fd5b505af11580156109c2573d6000803e3d6000fd5b505050505050565b630a85bd0160e11b949350505050565b6001546001600160a01b031681565b6109f1610b41565b6001600160a01b0316610a02610a72565b6001600160a01b031614610a285760405162461bcd60e51b81526004016100fe90610e39565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b610a89610b41565b6001600160a01b0316610a9a610a72565b6001600160a01b031614610ac05760405162461bcd60e51b81526004016100fe90610e39565b6001600160a01b038116610ae65760405162461bcd60e51b81526004016100fe90610d6b565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600060208284031215610b56578081fd5b8135610b6181610f11565b9392505050565b600060208284031215610b79578081fd5b8151610b6181610f11565b60008060008060808587031215610b99578283fd5b8435610ba481610f11565b9350602085810135610bb581610f11565b935060408601359250606086013567ffffffffffffffff80821115610bd8578384fd5b818801915088601f830112610beb578384fd5b813581811115610bfd57610bfd610efb565b610c0f601f8201601f19168501610ead565b91508082528984828501011115610c24578485fd5b8084840185840137810190920192909252939692955090935050565b60006020808385031215610c52578182fd5b823567ffffffffffffffff80821115610c69578384fd5b818501915085601f830112610c7c578384fd5b813581811115610c8e57610c8e610efb565b8381029150610c9e848301610ead565b8181528481019084860184860187018a1015610cb8578788fd5b8795505b83861015610cda578035835260019590950194918601918601610cbc565b5098975050505050505050565b600060608284031215610cf8578081fd5b6040516060810181811067ffffffffffffffff82111715610d1b57610d1b610efb565b80604052508251815260208301516020820152604083015160408201528091505092915050565b6001600160a01b0391909116815260200190565b6001600160e01b031991909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b602080825260149082015273796f752061726520486967686572206265696e6760601b604082015260600190565b6020808252601390820152723cb7ba903237b713ba1037bbb7103a37b5b2b760691b604082015260600190565b6020808252601390820152724e465420616d6f756e742069732077726f6e6760681b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600e908201526d57726f6e67206e6674207479706560901b604082015260600190565b90815260200190565b918252602082015260400190565b60405181810167ffffffffffffffff81118282101715610ecf57610ecf610efb565b604052919050565b60008219821115610ef657634e487b7160e01b81526011600452602481fd5b500190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610f2657600080fd5b5056fea26469706673582212205feb099f4c90a373e45b060b099d45725cddb3405943ee8dbed3d04fd8bd103264736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:341:39",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:39",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "110:229:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "156:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "165:6:39"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "173:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "158:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "158:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "158:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "131:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "140:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "127:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "127:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "152:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "123:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "123:32:39"
                  },
                  "nodeType": "YulIf",
                  "src": "120:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "191:29:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "210:9:39"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "204:5:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "204:16:39"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "195:5:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "283:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "292:6:39"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "300:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "285:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "285:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "285:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "242:5:39"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "253:5:39"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "268:3:39",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "273:1:39",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "264:3:39"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "264:11:39"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "277:1:39",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "260:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "260:19:39"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "249:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "249:31:39"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "239:2:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:42:39"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:50:39"
                  },
                  "nodeType": "YulIf",
                  "src": "229:2:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "318:15:39",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "328:5:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "318:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_GenNFT_$1518_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "76:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "87:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "99:6:39",
                "type": ""
              }
            ],
            "src": "14:325:39"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_GenNFT_$1518_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 39,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7533:39",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:39",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:39"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:39"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:39"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:39"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:39",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:39",
                "type": ""
              }
            ],
            "src": "14:259:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "359:182:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "405:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "414:6:39"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "422:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "407:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "407:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "407:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "380:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "389:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "376:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "376:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "372:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:32:39"
                  },
                  "nodeType": "YulIf",
                  "src": "369:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "440:29:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "459:9:39"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "453:5:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "453:16:39"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "444:5:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "505:5:39"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "478:26:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "478:33:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "478:33:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "520:15:39",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "530:5:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "520:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "325:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "336:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "348:6:39",
                "type": ""
              }
            ],
            "src": "278:263:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "676:1026:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "723:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "732:6:39"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "740:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "725:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "725:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "725:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "697:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "706:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "693:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "693:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "718:3:39",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "689:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "689:33:39"
                  },
                  "nodeType": "YulIf",
                  "src": "686:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "758:36:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "784:9:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "771:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "771:23:39"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "762:5:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "830:5:39"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "803:26:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "803:33:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "803:33:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "845:15:39",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "855:5:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "845:6:39"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "869:12:39",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "879:2:39",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "873:2:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "890:47:39",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "922:9:39"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "933:2:39"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "918:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "918:18:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "905:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "905:32:39"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "894:7:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "973:7:39"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "946:26:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "946:35:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "946:35:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "990:17:39",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1000:7:39"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "990:6:39"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1016:42:39",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1043:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1054:2:39",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1039:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1039:18:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1026:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1026:32:39"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1016:6:39"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1067:46:39",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1098:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1109:2:39",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1094:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1094:18:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1081:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1081:32:39"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1071:6:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1122:28:39",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1132:18:39",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1126:2:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1177:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1186:6:39"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1194:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1179:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1179:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1179:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1165:6:39"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1173:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1162:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1162:14:39"
                  },
                  "nodeType": "YulIf",
                  "src": "1159:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1212:32:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1226:9:39"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1237:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1222:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1222:22:39"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1216:2:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1292:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1301:6:39"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1309:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1294:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1294:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1294:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1271:2:39"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1275:4:39",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1267:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1267:13:39"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1282:7:39"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1263:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1263:27:39"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1256:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:35:39"
                  },
                  "nodeType": "YulIf",
                  "src": "1253:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1327:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1350:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1337:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1337:16:39"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1331:2:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1376:22:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1378:16:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1378:18:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1378:18:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1368:2:39"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1372:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1365:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1365:10:39"
                  },
                  "nodeType": "YulIf",
                  "src": "1362:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1407:65:39",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1447:2:39"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1451:4:39",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1443:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1443:13:39"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1462:2:39",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1458:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1458:7:39"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1439:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1439:27:39"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1468:2:39"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1435:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1435:36:39"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1420:14:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1420:52:39"
                  },
                  "variables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "1411:5:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "1488:5:39"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1495:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1481:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1481:17:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1481:17:39"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1544:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1553:6:39"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1561:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1546:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1546:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1546:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1521:2:39"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1525:2:39"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1517:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1517:11:39"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1530:2:39"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1513:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1513:20:39"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1535:7:39"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1510:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1510:33:39"
                  },
                  "nodeType": "YulIf",
                  "src": "1507:2:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "1596:5:39"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1603:2:39"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1592:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1592:14:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1612:2:39"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1616:2:39"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1608:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1608:11:39"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1621:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1579:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1579:45:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1579:45:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "1648:5:39"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1655:2:39"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1644:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1644:14:39"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1660:2:39"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1640:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1640:23:39"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1665:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1633:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1633:39:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1633:39:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1681:15:39",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "1691:5:39"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1681:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "618:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "629:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "641:6:39",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "649:6:39",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "657:6:39",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "665:6:39",
                "type": ""
              }
            ],
            "src": "546:1156:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1802:907:39",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1812:12:39",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1822:2:39",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1816:2:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1869:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1878:6:39"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1886:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1871:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1871:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1871:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1844:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1853:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1840:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1840:23:39"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1865:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1836:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1836:32:39"
                  },
                  "nodeType": "YulIf",
                  "src": "1833:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1904:37:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1931:9:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1918:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1918:23:39"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1908:6:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1950:28:39",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1960:18:39",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1954:2:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2005:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2014:6:39"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2022:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2007:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2007:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2007:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1993:6:39"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2001:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1990:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1990:14:39"
                  },
                  "nodeType": "YulIf",
                  "src": "1987:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2040:32:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2054:9:39"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2065:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2050:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2050:22:39"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2044:2:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2120:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2129:6:39"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2137:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2122:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2122:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2122:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2099:2:39"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2103:4:39",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2095:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2095:13:39"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2110:7:39"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2091:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2091:27:39"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2084:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2084:35:39"
                  },
                  "nodeType": "YulIf",
                  "src": "2081:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2155:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2178:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2165:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2165:16:39"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "2159:2:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2204:22:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2206:16:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2206:18:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2206:18:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2196:2:39"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2200:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2193:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2193:10:39"
                  },
                  "nodeType": "YulIf",
                  "src": "2190:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2235:21:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2249:2:39"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2253:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2245:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2245:11:39"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "2239:2:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2265:38:39",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2295:2:39"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2299:2:39"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2291:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2291:11:39"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "2276:14:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2276:27:39"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "2269:3:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2312:16:39",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "2325:3:39"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "2316:5:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "2344:3:39"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2349:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2337:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2337:15:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2337:15:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2361:19:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "2372:3:39"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2377:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2368:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2368:12:39"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "2361:3:39"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2389:22:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2404:2:39"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2408:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2400:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2400:11:39"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "2393:3:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2457:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2466:6:39"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2474:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2459:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2459:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2459:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2434:2:39"
                              },
                              {
                                "name": "_5",
                                "nodeType": "YulIdentifier",
                                "src": "2438:2:39"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2430:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2430:11:39"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2443:2:39"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2426:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2426:20:39"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2448:7:39"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2423:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2423:33:39"
                  },
                  "nodeType": "YulIf",
                  "src": "2420:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2492:15:39",
                  "value": {
                    "name": "value0",
                    "nodeType": "YulIdentifier",
                    "src": "2501:6:39"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2496:1:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2561:118:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "2582:3:39"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "2600:3:39"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "2587:12:39"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2587:17:39"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2575:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2575:30:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2575:30:39"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2618:19:39",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "2629:3:39"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2634:2:39"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2625:3:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2625:12:39"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "2618:3:39"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2650:19:39",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "2661:3:39"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2666:2:39"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2657:3:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2657:12:39"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "2650:3:39"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2527:1:39"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2530:2:39"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2524:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2524:9:39"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2534:18:39",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2536:14:39",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2545:1:39"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2548:1:39",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2541:3:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2541:9:39"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2536:1:39"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2520:3:39",
                    "statements": []
                  },
                  "src": "2516:163:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2688:15:39",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "2698:5:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2688:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1768:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1779:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1791:6:39",
                "type": ""
              }
            ],
            "src": "1707:1002:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2817:464:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2863:26:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2872:6:39"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2880:6:39"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2865:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2865:22:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2865:22:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2838:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2847:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2834:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2834:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2859:2:39",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2830:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2830:32:39"
                  },
                  "nodeType": "YulIf",
                  "src": "2827:2:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2898:23:39",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2918:2:39",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2912:5:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2912:9:39"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2902:6:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2930:33:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2952:6:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2960:2:39",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2948:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2948:15:39"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2934:10:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3038:22:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3040:16:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3040:18:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3040:18:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2981:10:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2993:18:39",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2978:2:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2978:34:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3017:10:39"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3029:6:39"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3014:2:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3014:22:39"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2975:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2975:62:39"
                  },
                  "nodeType": "YulIf",
                  "src": "2972:2:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3076:2:39",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3080:10:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3069:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3069:22:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3069:22:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3107:6:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3121:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3115:5:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3115:16:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3100:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3100:32:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3100:32:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3152:6:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3160:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3148:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3148:15:39"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3175:9:39"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3186:2:39",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3171:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3171:18:39"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3165:5:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3165:25:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3141:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3141:50:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3141:50:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3211:6:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3219:2:39",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3207:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3207:15:39"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3234:9:39"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3245:2:39",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3230:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3230:18:39"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3224:5:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3224:25:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3200:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3200:50:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3200:50:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3259:16:39",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3269:6:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3259:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_Type_$1172_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2783:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2794:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2806:6:39",
                "type": ""
              }
            ],
            "src": "2714:567:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3387:102:39",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3397:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3409:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3420:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3405:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3405:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3397:4:39"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3439:9:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3454:6:39"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3470:3:39",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3475:1:39",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3466:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3466:11:39"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3479:1:39",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3462:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3462:19:39"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3450:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3450:32:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3432:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3432:51:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3432:51:39"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3356:9:39",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3367:6:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3378:4:39",
                "type": ""
              }
            ],
            "src": "3286:203:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3593:103:39",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3603:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3615:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3626:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3611:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3611:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3603:4:39"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3645:9:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3660:6:39"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3672:3:39",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3677:10:39",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "3668:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3668:20:39"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3656:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3656:33:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3638:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3638:52:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3638:52:39"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3562:9:39",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3573:6:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3584:4:39",
                "type": ""
              }
            ],
            "src": "3494:202:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3817:102:39",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3827:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3839:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3850:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3835:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3835:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3827:4:39"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3869:9:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3884:6:39"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3900:3:39",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3905:1:39",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3896:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3896:11:39"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3909:1:39",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3892:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3892:19:39"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3880:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3880:32:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3862:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3862:51:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3862:51:39"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_GenNFT_$1518__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3786:9:39",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3797:6:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3808:4:39",
                "type": ""
              }
            ],
            "src": "3701:218:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4098:228:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4115:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4126:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4108:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4108:21:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4108:21:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4149:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4160:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4145:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4145:18:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4165:2:39",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4138:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4138:30:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4138:30:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4188:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4199:2:39",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4184:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4184:18:39"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4204:34:39",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4177:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4177:62:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4177:62:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4259:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4270:2:39",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4255:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4255:18:39"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4275:8:39",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4248:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4248:36:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4248:36:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4293:27:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4305:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4316:3:39",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4301:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4301:19:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4293:4:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4075:9:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4089:4:39",
                "type": ""
              }
            ],
            "src": "3924:402:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4505:170:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4522:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4533:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4515:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4515:21:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4515:21:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4556:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4567:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4552:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4552:18:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4572:2:39",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4545:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4545:30:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4545:30:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4595:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4606:2:39",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4591:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4591:18:39"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4611:22:39",
                        "type": "",
                        "value": "you are Higher being"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4584:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4584:50:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4584:50:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4643:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4655:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4666:2:39",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4651:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4651:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4643:4:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3e1c4ac99677821327641be2c2bf757db31f481d164979e9b27908daf5fe2789__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4482:9:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4496:4:39",
                "type": ""
              }
            ],
            "src": "4331:344:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4854:169:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4871:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4882:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4864:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4864:21:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4864:21:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4905:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4916:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4901:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4901:18:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4921:2:39",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4894:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4894:30:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4894:30:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4944:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4955:2:39",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4940:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4940:18:39"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4960:21:39",
                        "type": "",
                        "value": "you don't own token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4933:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4933:49:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4933:49:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4991:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5003:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5014:2:39",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4999:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4999:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4991:4:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4831:9:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4845:4:39",
                "type": ""
              }
            ],
            "src": "4680:343:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5202:169:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5219:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5230:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5212:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5212:21:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5212:21:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5253:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5264:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5249:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5249:18:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5269:2:39",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5242:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5242:30:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5242:30:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5292:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5303:2:39",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5288:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5288:18:39"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5308:21:39",
                        "type": "",
                        "value": "NFT amount is wrong"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5281:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5281:49:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5281:49:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5339:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5351:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5362:2:39",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5347:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5347:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5339:4:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6cb34817768274509916fae7d774adfd9ac4f7963b8c0773edac6544e57cf0a2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5179:9:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5193:4:39",
                "type": ""
              }
            ],
            "src": "5028:343:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5550:182:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5567:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5578:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5560:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5560:21:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5560:21:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5601:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5612:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5597:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5597:18:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5617:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5590:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5590:30:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5590:30:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5640:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5651:2:39",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5636:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5636:18:39"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5656:34:39",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5629:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5629:62:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5629:62:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5700:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5712:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5723:2:39",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5708:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5708:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5700:4:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5527:9:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5541:4:39",
                "type": ""
              }
            ],
            "src": "5376:356:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5911:164:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5928:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5939:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5921:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5921:21:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5921:21:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5962:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5973:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5958:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5958:18:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5978:2:39",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5951:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5951:30:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5951:30:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6001:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6012:2:39",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5997:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5997:18:39"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6017:16:39",
                        "type": "",
                        "value": "Wrong nft type"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5990:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5990:44:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5990:44:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6043:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6055:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6066:2:39",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6051:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6051:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6043:4:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a705e29541cb01919ddc58dff2311b4e220e49d2647ac3148a08d1f6dd7b67a7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5888:9:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5902:4:39",
                "type": ""
              }
            ],
            "src": "5737:338:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6181:76:39",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6191:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6203:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6214:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6199:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6199:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6191:4:39"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6233:9:39"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6244:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6226:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6226:25:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6226:25:39"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6150:9:39",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6161:6:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6172:4:39",
                "type": ""
              }
            ],
            "src": "6080:177:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6399:119:39",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6409:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6421:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6432:2:39",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6417:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6417:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6409:4:39"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6451:9:39"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6462:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6444:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6444:25:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6444:25:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6489:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6500:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6485:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6485:18:39"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6505:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6478:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6478:34:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6478:34:39"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6360:9:39",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6371:6:39",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6379:6:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6390:4:39",
                "type": ""
              }
            ],
            "src": "6262:256:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6652:119:39",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6662:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6674:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6685:2:39",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6670:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6670:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6662:4:39"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6704:9:39"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6715:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6697:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6697:25:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6697:25:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6742:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6753:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6738:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6738:18:39"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6758:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6731:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6731:34:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6731:34:39"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6613:9:39",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6624:6:39",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6632:6:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6643:4:39",
                "type": ""
              }
            ],
            "src": "6523:248:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6820:207:39",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6830:19:39",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6846:2:39",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6840:5:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6840:9:39"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "6830:6:39"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6858:35:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "6880:6:39"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6888:4:39"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6876:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6876:17:39"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "6862:10:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6968:22:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "6970:16:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6970:18:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6970:18:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "6911:10:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6923:18:39",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6908:2:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6908:34:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "6947:10:39"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6959:6:39"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6944:2:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6944:22:39"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "6905:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6905:62:39"
                  },
                  "nodeType": "YulIf",
                  "src": "6902:2:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7006:2:39",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "7010:10:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6999:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6999:22:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6999:22:39"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "6800:4:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6809:6:39",
                "type": ""
              }
            ],
            "src": "6776:251:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7080:181:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7115:115:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "7136:3:39"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7145:3:39",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7150:10:39",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7141:3:39"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7141:20:39"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7129:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7129:33:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7129:33:39"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7182:1:39",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7185:4:39",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7175:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7175:15:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7175:15:39"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "7210:3:39"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7215:4:39",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7203:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7203:17:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7203:17:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7096:1:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7103:1:39"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7099:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7099:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7093:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7093:13:39"
                  },
                  "nodeType": "YulIf",
                  "src": "7090:2:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7239:16:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7250:1:39"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7253:1:39"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7246:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7246:9:39"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7239:3:39"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7063:1:39",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7066:1:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7072:3:39",
                "type": ""
              }
            ],
            "src": "7032:229:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7298:95:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7315:1:39",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7322:3:39",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7327:10:39",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7318:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7318:20:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7308:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7308:31:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7308:31:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7355:1:39",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7358:4:39",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7348:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7348:15:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7348:15:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7379:1:39",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7382:4:39",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7372:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7372:15:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7372:15:39"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "7266:127:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7445:86:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7509:16:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7518:1:39",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7521:1:39",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7511:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7511:12:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7511:12:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7468:5:39"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7479:5:39"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7494:3:39",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7499:1:39",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "7490:3:39"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7490:11:39"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7503:1:39",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "7486:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7486:19:39"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7475:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7475:31:39"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7465:2:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7465:42:39"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7458:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7458:50:39"
                  },
                  "nodeType": "YulIf",
                  "src": "7455:2:39"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7434:5:39",
                "type": ""
              }
            ],
            "src": "7398:133:39"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let _1 := 32\n        let value_1 := calldataload(add(headStart, _1))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value3, value3) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value3, value3) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocateMemory(add(and(add(_4, 0x1f), not(31)), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value3, value3) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), value3)\n        value3 := array\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := mul(_4, _1)\n        let dst := allocateMemory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_struct$_Type_$1172_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 96)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, mload(headStart))\n        mstore(add(memPtr, 32), mload(add(headStart, 32)))\n        mstore(add(memPtr, 64), mload(add(headStart, 64)))\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_contract$_GenNFT_$1518__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3e1c4ac99677821327641be2c2bf757db31f481d164979e9b27908daf5fe2789__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"you are Higher being\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"you don't own token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6cb34817768274509916fae7d774adfd9ac4f7963b8c0773edac6544e57cf0a2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"NFT amount is wrong\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a705e29541cb01919ddc58dff2311b4e220e49d2647ac3148a08d1f6dd7b67a7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Wrong nft type\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function allocateMemory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
      "id": 39,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "423:1232:1:-:0;;;575:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:9;887:12;:10;:12::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:9;-1:-1:-1;;;;;909:18:9;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:9;942:43;;909:6;;942:43;-1:-1:-1;631:3:1;:10;;-1:-1:-1;;;;;;631:10:1;-1:-1:-1;;;;;631:10:1;;;;;;;;;;423:1232;;586:96:21;665:10;586:96;:::o;14:325:39:-;;152:2;140:9;131:7;127:23;123:32;120:2;;;173:6;165;158:22;120:2;204:16;;-1:-1:-1;;;;;249:31:39;;239:42;;229:2;;300:6;292;285:22;229:2;328:5;110:229;-1:-1:-1;;;110:229:39:o;:::-;423:1232:1;;;;;;",
  "deployedSourceMap": "423:1232:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;658:995;;;;;;:::i;:::-;;:::i;:::-;;530:162:19;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;552:17:1;;;:::i;:::-;;;;;;;:::i;1700:145:9:-;;;:::i;1068:85::-;;;:::i;1994:240::-;;;;;;:::i;:::-;;:::i;658:995:1:-;732:7;:14;750:1;732:19;724:51;;;;-1:-1:-1;;;724:51:1;;;;;;;:::i;:::-;;;;;;;;;793:3;;805:10;;820;;-1:-1:-1;;;;;793:3:1;;:11;;805:7;;793:3;;805:10;;-1:-1:-1;;;805:10:1;;;;;;;;;;;;;;;793:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;793:37:1;;785:69;;;;-1:-1:-1;;;785:69:1;;;;;;;:::i;:::-;872:3;;;884:10;;899;;-1:-1:-1;;;;;872:3:1;;;;:11;;884:10;;872:3;884:10;;;;-1:-1:-1;;;884:10:1;;;;;;;;;;;;;;;872:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;872:37:1;;864:69;;;;-1:-1:-1;;;864:69:1;;;;;;;:::i;:::-;951:3;;963:10;;978;;-1:-1:-1;;;;;951:3:1;;:11;;963:7;;971:1;;963:10;;;;-1:-1:-1;;;963:10:1;;;;;;;;;;;;;;;951:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;951:37:1;;943:69;;;;-1:-1:-1;;;943:69:1;;;;;;;:::i;:::-;1030:3;;1042:10;;1057;;-1:-1:-1;;;;;1030:3:1;;:11;;1042:7;;1050:1;;1042:10;;;;-1:-1:-1;;;1042:10:1;;;;;;;;;;;;;;;1030:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1030:37:1;;1022:69;;;;-1:-1:-1;;;1022:69:1;;;;;;;:::i;:::-;1118:3;;1139:10;;1101:14;;-1:-1:-1;;;;;1118:3:1;;:20;;1139:7;;1101:14;;1139:10;;-1:-1:-1;;;1139:10:1;;;;;;;;;;;;;;;1118:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;-1:-1:-1;1192:1:1;1180:13;;1172:46;;;;-1:-1:-1;;;1172:46:1;;;;;;;:::i;:::-;1236:3;;;1257:10;;1275:9;;-1:-1:-1;;;;;1236:3:1;;;;:20;;1257:7;;1236:3;1257:10;;;;-1:-1:-1;;;1257:10:1;;;;;;;;;;;;;;;1236:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;:48;1228:75;;;;-1:-1:-1;;;1228:75:1;;;;;;;:::i;:::-;1321:3;;1342:10;;1360:9;;-1:-1:-1;;;;;1321:3:1;;:20;;1342:7;;1350:1;;1342:10;;;;-1:-1:-1;;;1342:10:1;;;;;;;;;;;;;;;1321:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;:48;1313:75;;;;-1:-1:-1;;;1313:75:1;;;;;;;:::i;:::-;1406:3;;1427:10;;1445:9;;-1:-1:-1;;;;;1406:3:1;;:20;;1427:7;;1435:1;;1427:10;;;;-1:-1:-1;;;1427:10:1;;;;;;;;;;;;;;;1406:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;:48;1398:75;;;;-1:-1:-1;;;1398:75:1;;;;;;;:::i;:::-;1488:3;;1503:10;;-1:-1:-1;;;;;1488:3:1;;;;:14;;1503:7;;1488:3;;1503:10;;-1:-1:-1;;;1503:10:1;;;;;;;;;;;;;;;1515:9;1527:1;1515:13;;;;:::i;:::-;1488:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1539:3:1;;;1554:10;;-1:-1:-1;;;;;1539:3:1;;;;-1:-1:-1;1539:14:1;;-1:-1:-1;1554:7:1;;1539:3;1554:10;;;;-1:-1:-1;;;1554:10:1;;;;;;;;;;;;;;;1566:1;1539:29;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1578:3:1;;1593:10;;-1:-1:-1;;;;;1578:3:1;;;;-1:-1:-1;1578:14:1;;-1:-1:-1;1593:7:1;;1601:1;;1593:10;;;;-1:-1:-1;;;1593:10:1;;;;;;;;;;;;;;;1605:1;1578:29;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1617:3:1;;1632:10;;-1:-1:-1;;;;;1617:3:1;;;;-1:-1:-1;1617:14:1;;-1:-1:-1;1632:7:1;;1640:1;;1632:10;;;;-1:-1:-1;;;1632:10:1;;;;;;;;;;;;;;;1644:1;1617:29;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;658:995;;:::o;530:162:19:-;-1:-1:-1;;;530:162:19;;;;;;:::o;552:17:1:-;;;-1:-1:-1;;;;;552:17:1;;:::o;1700:145:9:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:9;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:9;;1272:68;;;;-1:-1:-1;;;1272:68:9;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:9;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:9::1;::::0;;1700:145::o;1068:85::-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:9;1068:85;:::o;1994:240::-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:9;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:9;;1272:68;;;;-1:-1:-1;;;1272:68:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:9;::::1;2074:73;;;;-1:-1:-1::0;;;2074:73:9::1;;;;;;;:::i;:::-;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:9;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:9::1;-1:-1:-1::0;;;;;2210:17:9;;;::::1;::::0;;;::::1;::::0;;1994:240::o;586:96:21:-;665:10;586:96;:::o;14:259:39:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;:::-;262:5;84:189;-1:-1:-1;;;84:189:39:o;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:1156::-;;;;;718:3;706:9;697:7;693:23;689:33;686:2;;;740:6;732;725:22;686:2;784:9;771:23;803:33;830:5;803:33;:::i;:::-;855:5;-1:-1:-1;879:2:39;918:18;;;905:32;946:35;905:32;946:35;:::i;:::-;1000:7;-1:-1:-1;1054:2:39;1039:18;;1026:32;;-1:-1:-1;1109:2:39;1094:18;;1081:32;1132:18;1162:14;;;1159:2;;;1194:6;1186;1179:22;1159:2;1237:6;1226:9;1222:22;1212:32;;1282:7;1275:4;1271:2;1267:13;1263:27;1253:2;;1309:6;1301;1294:22;1253:2;1350;1337:16;1372:2;1368;1365:10;1362:2;;;1378:18;;:::i;:::-;1420:52;1462:2;1443:13;;-1:-1:-1;;1439:27:39;1435:36;;1420:52;:::i;:::-;1407:65;;1495:2;1488:5;1481:17;1535:7;1530:2;1525;1521;1517:11;1513:20;1510:33;1507:2;;;1561:6;1553;1546:22;1507:2;1621;1616;1612;1608:11;1603:2;1596:5;1592:14;1579:45;1644:14;;1640:23;;;1633:39;;;;676:1026;;;;-1:-1:-1;676:1026:39;;-1:-1:-1;;676:1026:39:o;1707:1002::-;;1822:2;1865;1853:9;1844:7;1840:23;1836:32;1833:2;;;1886:6;1878;1871:22;1833:2;1931:9;1918:23;1960:18;2001:2;1993:6;1990:14;1987:2;;;2022:6;2014;2007:22;1987:2;2065:6;2054:9;2050:22;2040:32;;2110:7;2103:4;2099:2;2095:13;2091:27;2081:2;;2137:6;2129;2122:22;2081:2;2178;2165:16;2200:2;2196;2193:10;2190:2;;;2206:18;;:::i;:::-;2253:2;2249;2245:11;2235:21;;2276:27;2299:2;2295;2291:11;2276:27;:::i;:::-;2337:15;;;2368:12;;;;2400:11;;;2430;;;2426:20;;2423:33;-1:-1:-1;2420:2:39;;;2474:6;2466;2459:22;2420:2;2501:6;2492:15;;2516:163;2530:2;2527:1;2524:9;2516:163;;;2587:17;;2575:30;;2548:1;2541:9;;;;;2625:12;;;;2657;;2516:163;;;-1:-1:-1;2698:5:39;1802:907;-1:-1:-1;;;;;;;;1802:907:39:o;2714:567::-;;2859:2;2847:9;2838:7;2834:23;2830:32;2827:2;;;2880:6;2872;2865:22;2827:2;2918;2912:9;2960:2;2952:6;2948:15;3029:6;3017:10;3014:22;2993:18;2981:10;2978:34;2975:62;2972:2;;;3040:18;;:::i;:::-;3080:10;3076:2;3069:22;;3121:9;3115:16;3107:6;3100:32;3186:2;3175:9;3171:18;3165:25;3160:2;3152:6;3148:15;3141:50;3245:2;3234:9;3230:18;3224:25;3219:2;3211:6;3207:15;3200:50;3269:6;3259:16;;;2817:464;;;;:::o;3286:203::-;-1:-1:-1;;;;;3450:32:39;;;;3432:51;;3420:2;3405:18;;3387:102::o;3494:202::-;-1:-1:-1;;;;;;3656:33:39;;;;3638:52;;3626:2;3611:18;;3593:103::o;3924:402::-;4126:2;4108:21;;;4165:2;4145:18;;;4138:30;4204:34;4199:2;4184:18;;4177:62;-1:-1:-1;;;4270:2:39;4255:18;;4248:36;4316:3;4301:19;;4098:228::o;4331:344::-;4533:2;4515:21;;;4572:2;4552:18;;;4545:30;-1:-1:-1;;;4606:2:39;4591:18;;4584:50;4666:2;4651:18;;4505:170::o;4680:343::-;4882:2;4864:21;;;4921:2;4901:18;;;4894:30;-1:-1:-1;;;4955:2:39;4940:18;;4933:49;5014:2;4999:18;;4854:169::o;5028:343::-;5230:2;5212:21;;;5269:2;5249:18;;;5242:30;-1:-1:-1;;;5303:2:39;5288:18;;5281:49;5362:2;5347:18;;5202:169::o;5376:356::-;5578:2;5560:21;;;5597:18;;;5590:30;5656:34;5651:2;5636:18;;5629:62;5723:2;5708:18;;5550:182::o;5737:338::-;5939:2;5921:21;;;5978:2;5958:18;;;5951:30;-1:-1:-1;;;6012:2:39;5997:18;;5990:44;6066:2;6051:18;;5911:164::o;6080:177::-;6226:25;;;6214:2;6199:18;;6181:76::o;6262:256::-;6444:25;;;6500:2;6485:18;;6478:34;6432:2;6417:18;;6399:119::o;6776:251::-;6846:2;6840:9;6876:17;;;6923:18;6908:34;;6944:22;;;6905:62;6902:2;;;6970:18;;:::i;:::-;7006:2;6999:22;6820:207;;-1:-1:-1;6820:207:39:o;7032:229::-;;7103:1;7099:6;7096:1;7093:13;7090:2;;;-1:-1:-1;;;7129:33:39;;7185:4;7182:1;7175:15;7215:4;7136:3;7203:17;7090:2;-1:-1:-1;7246:9:39;;7080:181::o;7266:127::-;7327:10;7322:3;7318:20;7315:1;7308:31;7358:4;7355:1;7348:15;7382:4;7379:1;7372:15;7398:133;-1:-1:-1;;;;;7475:31:39;;7465:42;;7455:2;;7521:1;7518;7511:12;7455:2;7445:86;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.0;\n\nimport \"../oz/utils/structs/EnumerableSet.sol\";\nimport \"../oz/access/Ownable.sol\";\nimport \"../oz/token/ERC20/ERC20.sol\";\nimport \"../oz/token/ERC20/IERC20.sol\";\nimport \"../oz/token/ERC20/utils/SafeERC20.sol\";\nimport \"../oz/token/ERC721/utils/ERC721Holder.sol\";\nimport '../oz/token/ERC721/IERC721.sol';\nimport \"../oz/utils/math/SafeMath.sol\";\nimport \"./GenNFT.sol\";\n\n\ncontract Fuse is Ownable, ERC721Holder {\n    using SafeERC20 for IERC20;\n    using SafeMath for uint;\n\n    // The NFT TOKEN!\n    GenNFT public nft;\n    constructor(\n        GenNFT _nft\n    ) public {\n        nft = _nft;\n    }\n    \n    function fuseNFT(uint[] memory _nftIds) public {\n        \n        require(_nftIds.length == 4, \"NFT amount is wrong\");\n        require(nft.ownerOf(_nftIds[0]) == msg.sender, \"you don't own token\");\n        require(nft.ownerOf(_nftIds[1]) == msg.sender, \"you don't own token\");\n        require(nft.ownerOf(_nftIds[2]) == msg.sender, \"you don't own token\");\n        require(nft.ownerOf(_nftIds[3]) == msg.sender, \"you don't own token\");\n        uint nftTypeId = nft.getTypeByTokenId(_nftIds[0]).id;\n        \n        require(nftTypeId < 8, \"you are Higher being\");\n        require(nft.getTypeByTokenId(_nftIds[1]).id == nftTypeId, \"Wrong nft type\");\n        require(nft.getTypeByTokenId(_nftIds[2]).id == nftTypeId, \"Wrong nft type\");\n        require(nft.getTypeByTokenId(_nftIds[3]).id == nftTypeId, \"Wrong nft type\");\n    \n        nft.changeType(_nftIds[0], nftTypeId + 1);\n        nft.changeType(_nftIds[1], 0);\n        nft.changeType(_nftIds[2], 0);\n        nft.changeType(_nftIds[3], 0);\n    }\n}",
  "sourcePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/Fuse.sol",
  "ast": {
    "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/Fuse.sol",
    "exportedSymbols": {
      "Address": [
        6274
      ],
      "Context": [
        6297
      ],
      "ERC165": [
        6524
      ],
      "ERC20": [
        4299
      ],
      "ERC721": [
        5421
      ],
      "ERC721Enumerable": [
        5893
      ],
      "ERC721Holder": [
        5978
      ],
      "EnumerableSet": [
        7363
      ],
      "Fuse": [
        1098
      ],
      "GenNFT": [
        1518
      ],
      "IERC165": [
        6536
      ],
      "IERC20": [
        4377
      ],
      "IERC721": [
        5537
      ],
      "IERC721Enumerable": [
        5924
      ],
      "IERC721Metadata": [
        5951
      ],
      "IERC721Receiver": [
        5555
      ],
      "Ownable": [
        3798
      ],
      "SafeERC20": [
        4600
      ],
      "SafeMath": [
        6848
      ],
      "Strings": [
        6500
      ]
    },
    "id": 1099,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 902,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:1"
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/structs/EnumerableSet.sol",
        "file": "../oz/utils/structs/EnumerableSet.sol",
        "id": 903,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 7364,
        "src": "57:47:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/access/Ownable.sol",
        "file": "../oz/access/Ownable.sol",
        "id": 904,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 3799,
        "src": "105:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/ERC20.sol",
        "file": "../oz/token/ERC20/ERC20.sol",
        "id": 905,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 4300,
        "src": "140:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/IERC20.sol",
        "file": "../oz/token/ERC20/IERC20.sol",
        "id": 906,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 4378,
        "src": "178:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/utils/SafeERC20.sol",
        "file": "../oz/token/ERC20/utils/SafeERC20.sol",
        "id": 907,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 4601,
        "src": "217:47:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/utils/ERC721Holder.sol",
        "file": "../oz/token/ERC721/utils/ERC721Holder.sol",
        "id": 908,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 5979,
        "src": "265:51:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/IERC721.sol",
        "file": "../oz/token/ERC721/IERC721.sol",
        "id": 909,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 5538,
        "src": "317:40:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/math/SafeMath.sol",
        "file": "../oz/utils/math/SafeMath.sol",
        "id": 910,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 6849,
        "src": "358:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/GenNFT.sol",
        "file": "./GenNFT.sol",
        "id": 911,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 1519,
        "src": "398:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 912,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3798,
              "src": "440:7:1"
            },
            "id": 913,
            "nodeType": "InheritanceSpecifier",
            "src": "440:7:1"
          },
          {
            "baseName": {
              "id": 914,
              "name": "ERC721Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5978,
              "src": "449:12:1"
            },
            "id": 915,
            "nodeType": "InheritanceSpecifier",
            "src": "449:12:1"
          }
        ],
        "contractDependencies": [
          3798,
          5555,
          5978,
          6297
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1098,
        "linearizedBaseContracts": [
          1098,
          5978,
          5555,
          3798,
          6297
        ],
        "name": "Fuse",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 919,
            "libraryName": {
              "id": 916,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4600,
              "src": "474:9:1"
            },
            "nodeType": "UsingForDirective",
            "src": "468:27:1",
            "typeName": {
              "id": 918,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 917,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4377,
                "src": "488:6:1"
              },
              "referencedDeclaration": 4377,
              "src": "488:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4377",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 922,
            "libraryName": {
              "id": 920,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6848,
              "src": "506:8:1"
            },
            "nodeType": "UsingForDirective",
            "src": "500:24:1",
            "typeName": {
              "id": 921,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "519:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "47ccca02",
            "id": 925,
            "mutability": "mutable",
            "name": "nft",
            "nodeType": "VariableDeclaration",
            "scope": 1098,
            "src": "552:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GenNFT_$1518",
              "typeString": "contract GenNFT"
            },
            "typeName": {
              "id": 924,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 923,
                "name": "GenNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1518,
                "src": "552:6:1"
              },
              "referencedDeclaration": 1518,
              "src": "552:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GenNFT_$1518",
                "typeString": "contract GenNFT"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 935,
              "nodeType": "Block",
              "src": "621:27:1",
              "statements": [
                {
                  "expression": {
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 931,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 925,
                      "src": "631:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GenNFT_$1518",
                        "typeString": "contract GenNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 932,
                      "name": "_nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 928,
                      "src": "637:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GenNFT_$1518",
                        "typeString": "contract GenNFT"
                      }
                    },
                    "src": "631:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GenNFT_$1518",
                      "typeString": "contract GenNFT"
                    }
                  },
                  "id": 934,
                  "nodeType": "ExpressionStatement",
                  "src": "631:10:1"
                }
              ]
            },
            "id": 936,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 928,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nodeType": "VariableDeclaration",
                  "scope": 936,
                  "src": "596:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GenNFT_$1518",
                    "typeString": "contract GenNFT"
                  },
                  "typeName": {
                    "id": 927,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 926,
                      "name": "GenNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1518,
                      "src": "596:6:1"
                    },
                    "referencedDeclaration": 1518,
                    "src": "596:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GenNFT_$1518",
                      "typeString": "contract GenNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "586:27:1"
            },
            "returnParameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "621:0:1"
            },
            "scope": 1098,
            "src": "575:73:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1096,
              "nodeType": "Block",
              "src": "705:948:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 943,
                            "name": "_nftIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 939,
                            "src": "732:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "732:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "750:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "732:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e465420616d6f756e742069732077726f6e67",
                        "id": 947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "753:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6cb34817768274509916fae7d774adfd9ac4f7963b8c0773edac6544e57cf0a2",
                          "typeString": "literal_string \"NFT amount is wrong\""
                        },
                        "value": "NFT amount is wrong"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6cb34817768274509916fae7d774adfd9ac4f7963b8c0773edac6544e57cf0a2",
                          "typeString": "literal_string \"NFT amount is wrong\""
                        }
                      ],
                      "id": 942,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "724:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "724:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 949,
                  "nodeType": "ExpressionStatement",
                  "src": "724:51:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 953,
                                "name": "_nftIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 939,
                                "src": "805:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 955,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 954,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "813:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "805:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 951,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "793:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GenNFT_$1518",
                                "typeString": "contract GenNFT"
                              }
                            },
                            "id": 952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4747,
                            "src": "793:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "793:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 957,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "820:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "820:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "793:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520646f6e2774206f776e20746f6b656e",
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "832:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b",
                          "typeString": "literal_string \"you don't own token\""
                        },
                        "value": "you don't own token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b",
                          "typeString": "literal_string \"you don't own token\""
                        }
                      ],
                      "id": 950,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "785:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "785:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 962,
                  "nodeType": "ExpressionStatement",
                  "src": "785:69:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 966,
                                "name": "_nftIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 939,
                                "src": "884:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 968,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "892:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "884:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 964,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "872:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GenNFT_$1518",
                                "typeString": "contract GenNFT"
                              }
                            },
                            "id": 965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4747,
                            "src": "872:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "872:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 970,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "899:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "899:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "872:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520646f6e2774206f776e20746f6b656e",
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "911:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b",
                          "typeString": "literal_string \"you don't own token\""
                        },
                        "value": "you don't own token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b",
                          "typeString": "literal_string \"you don't own token\""
                        }
                      ],
                      "id": 963,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "864:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "864:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 975,
                  "nodeType": "ExpressionStatement",
                  "src": "864:69:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 979,
                                "name": "_nftIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 939,
                                "src": "963:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 981,
                              "indexExpression": {
                                "hexValue": "32",
                                "id": 980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "971:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "963:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 977,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "951:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GenNFT_$1518",
                                "typeString": "contract GenNFT"
                              }
                            },
                            "id": 978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4747,
                            "src": "951:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "951:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 983,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "978:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "978:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "951:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520646f6e2774206f776e20746f6b656e",
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "990:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b",
                          "typeString": "literal_string \"you don't own token\""
                        },
                        "value": "you don't own token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b",
                          "typeString": "literal_string \"you don't own token\""
                        }
                      ],
                      "id": 976,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "943:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "943:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 988,
                  "nodeType": "ExpressionStatement",
                  "src": "943:69:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 992,
                                "name": "_nftIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 939,
                                "src": "1042:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 994,
                              "indexExpression": {
                                "hexValue": "33",
                                "id": 993,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1050:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1042:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 990,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "1030:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GenNFT_$1518",
                                "typeString": "contract GenNFT"
                              }
                            },
                            "id": 991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4747,
                            "src": "1030:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1030:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 996,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1057:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1057:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1030:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520646f6e2774206f776e20746f6b656e",
                        "id": 999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1069:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b",
                          "typeString": "literal_string \"you don't own token\""
                        },
                        "value": "you don't own token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b",
                          "typeString": "literal_string \"you don't own token\""
                        }
                      ],
                      "id": 989,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1022:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1022:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1001,
                  "nodeType": "ExpressionStatement",
                  "src": "1022:69:1"
                },
                {
                  "assignments": [
                    1003
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1003,
                      "mutability": "mutable",
                      "name": "nftTypeId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1096,
                      "src": "1101:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1002,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1101:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1011,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 1006,
                            "name": "_nftIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 939,
                            "src": "1139:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 1008,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 1007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1147:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1139:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1004,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 925,
                          "src": "1118:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GenNFT_$1518",
                            "typeString": "contract GenNFT"
                          }
                        },
                        "id": 1005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getTypeByTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1422,
                        "src": "1118:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Type_$1172_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (struct GenNFT.Type memory)"
                        }
                      },
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1118:32:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Type_$1172_memory_ptr",
                        "typeString": "struct GenNFT.Type memory"
                      }
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "id",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1167,
                    "src": "1118:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1101:52:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1013,
                          "name": "nftTypeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "1180:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "38",
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1192:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "value": "8"
                        },
                        "src": "1180:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f752061726520486967686572206265696e67",
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1195:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e1c4ac99677821327641be2c2bf757db31f481d164979e9b27908daf5fe2789",
                          "typeString": "literal_string \"you are Higher being\""
                        },
                        "value": "you are Higher being"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e1c4ac99677821327641be2c2bf757db31f481d164979e9b27908daf5fe2789",
                          "typeString": "literal_string \"you are Higher being\""
                        }
                      ],
                      "id": 1012,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1172:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1172:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1018,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:46:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 1022,
                                  "name": "_nftIds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 939,
                                  "src": "1257:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1024,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 1023,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1265:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1257:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1020,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 925,
                                "src": "1236:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GenNFT_$1518",
                                  "typeString": "contract GenNFT"
                                }
                              },
                              "id": 1021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getTypeByTokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1422,
                              "src": "1236:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Type_$1172_memory_ptr_$",
                                "typeString": "function (uint256) view external returns (struct GenNFT.Type memory)"
                              }
                            },
                            "id": 1025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1236:32:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Type_$1172_memory_ptr",
                              "typeString": "struct GenNFT.Type memory"
                            }
                          },
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1167,
                          "src": "1236:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1027,
                          "name": "nftTypeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "1275:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1236:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e67206e66742074797065",
                        "id": 1029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1286:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a705e29541cb01919ddc58dff2311b4e220e49d2647ac3148a08d1f6dd7b67a7",
                          "typeString": "literal_string \"Wrong nft type\""
                        },
                        "value": "Wrong nft type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a705e29541cb01919ddc58dff2311b4e220e49d2647ac3148a08d1f6dd7b67a7",
                          "typeString": "literal_string \"Wrong nft type\""
                        }
                      ],
                      "id": 1019,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1228:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1031,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:75:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 1035,
                                  "name": "_nftIds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 939,
                                  "src": "1342:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1037,
                                "indexExpression": {
                                  "hexValue": "32",
                                  "id": 1036,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1350:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1342:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1033,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 925,
                                "src": "1321:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GenNFT_$1518",
                                  "typeString": "contract GenNFT"
                                }
                              },
                              "id": 1034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getTypeByTokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1422,
                              "src": "1321:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Type_$1172_memory_ptr_$",
                                "typeString": "function (uint256) view external returns (struct GenNFT.Type memory)"
                              }
                            },
                            "id": 1038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1321:32:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Type_$1172_memory_ptr",
                              "typeString": "struct GenNFT.Type memory"
                            }
                          },
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1167,
                          "src": "1321:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1040,
                          "name": "nftTypeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "1360:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1321:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e67206e66742074797065",
                        "id": 1042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1371:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a705e29541cb01919ddc58dff2311b4e220e49d2647ac3148a08d1f6dd7b67a7",
                          "typeString": "literal_string \"Wrong nft type\""
                        },
                        "value": "Wrong nft type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a705e29541cb01919ddc58dff2311b4e220e49d2647ac3148a08d1f6dd7b67a7",
                          "typeString": "literal_string \"Wrong nft type\""
                        }
                      ],
                      "id": 1032,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1313:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1313:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1044,
                  "nodeType": "ExpressionStatement",
                  "src": "1313:75:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 1048,
                                  "name": "_nftIds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 939,
                                  "src": "1427:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1050,
                                "indexExpression": {
                                  "hexValue": "33",
                                  "id": 1049,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1435:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1427:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1046,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 925,
                                "src": "1406:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GenNFT_$1518",
                                  "typeString": "contract GenNFT"
                                }
                              },
                              "id": 1047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getTypeByTokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1422,
                              "src": "1406:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Type_$1172_memory_ptr_$",
                                "typeString": "function (uint256) view external returns (struct GenNFT.Type memory)"
                              }
                            },
                            "id": 1051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1406:32:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Type_$1172_memory_ptr",
                              "typeString": "struct GenNFT.Type memory"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1167,
                          "src": "1406:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1053,
                          "name": "nftTypeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "1445:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1406:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e67206e66742074797065",
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1456:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a705e29541cb01919ddc58dff2311b4e220e49d2647ac3148a08d1f6dd7b67a7",
                          "typeString": "literal_string \"Wrong nft type\""
                        },
                        "value": "Wrong nft type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a705e29541cb01919ddc58dff2311b4e220e49d2647ac3148a08d1f6dd7b67a7",
                          "typeString": "literal_string \"Wrong nft type\""
                        }
                      ],
                      "id": 1045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1398:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1398:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1057,
                  "nodeType": "ExpressionStatement",
                  "src": "1398:75:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1061,
                          "name": "_nftIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 939,
                          "src": "1503:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 1063,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1511:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1503:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1064,
                          "name": "nftTypeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "1515:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1527:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1515:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1058,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "1488:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GenNFT_$1518",
                          "typeString": "contract GenNFT"
                        }
                      },
                      "id": 1060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1296,
                      "src": "1488:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1488:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1068,
                  "nodeType": "ExpressionStatement",
                  "src": "1488:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1072,
                          "name": "_nftIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 939,
                          "src": "1554:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 1074,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 1073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1562:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1554:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1566:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 1069,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "1539:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GenNFT_$1518",
                          "typeString": "contract GenNFT"
                        }
                      },
                      "id": 1071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1296,
                      "src": "1539:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1539:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1077,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:29:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1081,
                          "name": "_nftIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 939,
                          "src": "1593:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 1083,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1601:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1593:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1605:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 1078,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "1578:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GenNFT_$1518",
                          "typeString": "contract GenNFT"
                        }
                      },
                      "id": 1080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1296,
                      "src": "1578:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1578:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "1578:29:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1090,
                          "name": "_nftIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 939,
                          "src": "1632:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 1092,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 1091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1640:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1632:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1644:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 1087,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "1617:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GenNFT_$1518",
                          "typeString": "contract GenNFT"
                        }
                      },
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1296,
                      "src": "1617:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 1094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1095,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:29:1"
                }
              ]
            },
            "functionSelector": "08f673d8",
            "id": 1097,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fuseNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 939,
                  "mutability": "mutable",
                  "name": "_nftIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 1097,
                  "src": "675:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 937,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "675:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 938,
                    "nodeType": "ArrayTypeName",
                    "src": "675:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "674:23:1"
            },
            "returnParameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:0:1"
            },
            "scope": 1098,
            "src": "658:995:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1099,
        "src": "423:1232:1"
      }
    ],
    "src": "33:1622:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/Fuse.sol",
    "exportedSymbols": {
      "Address": [
        6274
      ],
      "Context": [
        6297
      ],
      "ERC165": [
        6524
      ],
      "ERC20": [
        4299
      ],
      "ERC721": [
        5421
      ],
      "ERC721Enumerable": [
        5893
      ],
      "ERC721Holder": [
        5978
      ],
      "EnumerableSet": [
        7363
      ],
      "Fuse": [
        1098
      ],
      "GenNFT": [
        1518
      ],
      "IERC165": [
        6536
      ],
      "IERC20": [
        4377
      ],
      "IERC721": [
        5537
      ],
      "IERC721Enumerable": [
        5924
      ],
      "IERC721Metadata": [
        5951
      ],
      "IERC721Receiver": [
        5555
      ],
      "Ownable": [
        3798
      ],
      "SafeERC20": [
        4600
      ],
      "SafeMath": [
        6848
      ],
      "Strings": [
        6500
      ]
    },
    "id": 1099,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 902,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:1"
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/structs/EnumerableSet.sol",
        "file": "../oz/utils/structs/EnumerableSet.sol",
        "id": 903,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 7364,
        "src": "57:47:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/access/Ownable.sol",
        "file": "../oz/access/Ownable.sol",
        "id": 904,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 3799,
        "src": "105:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/ERC20.sol",
        "file": "../oz/token/ERC20/ERC20.sol",
        "id": 905,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 4300,
        "src": "140:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/IERC20.sol",
        "file": "../oz/token/ERC20/IERC20.sol",
        "id": 906,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 4378,
        "src": "178:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC20/utils/SafeERC20.sol",
        "file": "../oz/token/ERC20/utils/SafeERC20.sol",
        "id": 907,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 4601,
        "src": "217:47:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/utils/ERC721Holder.sol",
        "file": "../oz/token/ERC721/utils/ERC721Holder.sol",
        "id": 908,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 5979,
        "src": "265:51:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/token/ERC721/IERC721.sol",
        "file": "../oz/token/ERC721/IERC721.sol",
        "id": 909,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 5538,
        "src": "317:40:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/oz/utils/math/SafeMath.sol",
        "file": "../oz/utils/math/SafeMath.sol",
        "id": 910,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 6849,
        "src": "358:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexei120991/Documents/Project/RUNNER/EVA/Test/contracts/GenNFT.sol",
        "file": "./GenNFT.sol",
        "id": 911,
        "nodeType": "ImportDirective",
        "scope": 1099,
        "sourceUnit": 1519,
        "src": "398:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 912,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3798,
              "src": "440:7:1"
            },
            "id": 913,
            "nodeType": "InheritanceSpecifier",
            "src": "440:7:1"
          },
          {
            "baseName": {
              "id": 914,
              "name": "ERC721Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5978,
              "src": "449:12:1"
            },
            "id": 915,
            "nodeType": "InheritanceSpecifier",
            "src": "449:12:1"
          }
        ],
        "contractDependencies": [
          3798,
          5555,
          5978,
          6297
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1098,
        "linearizedBaseContracts": [
          1098,
          5978,
          5555,
          3798,
          6297
        ],
        "name": "Fuse",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 919,
            "libraryName": {
              "id": 916,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4600,
              "src": "474:9:1"
            },
            "nodeType": "UsingForDirective",
            "src": "468:27:1",
            "typeName": {
              "id": 918,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 917,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4377,
                "src": "488:6:1"
              },
              "referencedDeclaration": 4377,
              "src": "488:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4377",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 922,
            "libraryName": {
              "id": 920,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6848,
              "src": "506:8:1"
            },
            "nodeType": "UsingForDirective",
            "src": "500:24:1",
            "typeName": {
              "id": 921,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "519:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "47ccca02",
            "id": 925,
            "mutability": "mutable",
            "name": "nft",
            "nodeType": "VariableDeclaration",
            "scope": 1098,
            "src": "552:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GenNFT_$1518",
              "typeString": "contract GenNFT"
            },
            "typeName": {
              "id": 924,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 923,
                "name": "GenNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1518,
                "src": "552:6:1"
              },
              "referencedDeclaration": 1518,
              "src": "552:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GenNFT_$1518",
                "typeString": "contract GenNFT"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 935,
              "nodeType": "Block",
              "src": "621:27:1",
              "statements": [
                {
                  "expression": {
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 931,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 925,
                      "src": "631:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GenNFT_$1518",
                        "typeString": "contract GenNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 932,
                      "name": "_nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 928,
                      "src": "637:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GenNFT_$1518",
                        "typeString": "contract GenNFT"
                      }
                    },
                    "src": "631:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GenNFT_$1518",
                      "typeString": "contract GenNFT"
                    }
                  },
                  "id": 934,
                  "nodeType": "ExpressionStatement",
                  "src": "631:10:1"
                }
              ]
            },
            "id": 936,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 928,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nodeType": "VariableDeclaration",
                  "scope": 936,
                  "src": "596:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GenNFT_$1518",
                    "typeString": "contract GenNFT"
                  },
                  "typeName": {
                    "id": 927,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 926,
                      "name": "GenNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1518,
                      "src": "596:6:1"
                    },
                    "referencedDeclaration": 1518,
                    "src": "596:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GenNFT_$1518",
                      "typeString": "contract GenNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "586:27:1"
            },
            "returnParameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "621:0:1"
            },
            "scope": 1098,
            "src": "575:73:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1096,
              "nodeType": "Block",
              "src": "705:948:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 943,
                            "name": "_nftIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 939,
                            "src": "732:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "732:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "750:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "732:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e465420616d6f756e742069732077726f6e67",
                        "id": 947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "753:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6cb34817768274509916fae7d774adfd9ac4f7963b8c0773edac6544e57cf0a2",
                          "typeString": "literal_string \"NFT amount is wrong\""
                        },
                        "value": "NFT amount is wrong"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6cb34817768274509916fae7d774adfd9ac4f7963b8c0773edac6544e57cf0a2",
                          "typeString": "literal_string \"NFT amount is wrong\""
                        }
                      ],
                      "id": 942,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "724:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "724:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 949,
                  "nodeType": "ExpressionStatement",
                  "src": "724:51:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 953,
                                "name": "_nftIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 939,
                                "src": "805:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 955,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 954,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "813:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "805:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 951,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "793:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GenNFT_$1518",
                                "typeString": "contract GenNFT"
                              }
                            },
                            "id": 952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4747,
                            "src": "793:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "793:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 957,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "820:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "820:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "793:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520646f6e2774206f776e20746f6b656e",
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "832:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b",
                          "typeString": "literal_string \"you don't own token\""
                        },
                        "value": "you don't own token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b",
                          "typeString": "literal_string \"you don't own token\""
                        }
                      ],
                      "id": 950,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "785:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "785:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 962,
                  "nodeType": "ExpressionStatement",
                  "src": "785:69:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 966,
                                "name": "_nftIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 939,
                                "src": "884:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 968,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "892:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "884:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 964,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "872:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GenNFT_$1518",
                                "typeString": "contract GenNFT"
                              }
                            },
                            "id": 965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4747,
                            "src": "872:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "872:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 970,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "899:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "899:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "872:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520646f6e2774206f776e20746f6b656e",
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "911:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b",
                          "typeString": "literal_string \"you don't own token\""
                        },
                        "value": "you don't own token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b",
                          "typeString": "literal_string \"you don't own token\""
                        }
                      ],
                      "id": 963,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "864:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "864:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 975,
                  "nodeType": "ExpressionStatement",
                  "src": "864:69:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 979,
                                "name": "_nftIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 939,
                                "src": "963:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 981,
                              "indexExpression": {
                                "hexValue": "32",
                                "id": 980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "971:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "963:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 977,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "951:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GenNFT_$1518",
                                "typeString": "contract GenNFT"
                              }
                            },
                            "id": 978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4747,
                            "src": "951:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "951:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 983,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "978:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "978:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "951:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520646f6e2774206f776e20746f6b656e",
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "990:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b",
                          "typeString": "literal_string \"you don't own token\""
                        },
                        "value": "you don't own token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b",
                          "typeString": "literal_string \"you don't own token\""
                        }
                      ],
                      "id": 976,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "943:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "943:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 988,
                  "nodeType": "ExpressionStatement",
                  "src": "943:69:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 992,
                                "name": "_nftIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 939,
                                "src": "1042:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 994,
                              "indexExpression": {
                                "hexValue": "33",
                                "id": 993,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1050:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1042:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 990,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 925,
                              "src": "1030:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GenNFT_$1518",
                                "typeString": "contract GenNFT"
                              }
                            },
                            "id": 991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4747,
                            "src": "1030:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1030:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 996,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1057:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1057:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1030:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520646f6e2774206f776e20746f6b656e",
                        "id": 999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1069:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b",
                          "typeString": "literal_string \"you don't own token\""
                        },
                        "value": "you don't own token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67524bba78230f69c6267795553e3ff26874890a18b95a9eb7560feecfefcf9b",
                          "typeString": "literal_string \"you don't own token\""
                        }
                      ],
                      "id": 989,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1022:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1022:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1001,
                  "nodeType": "ExpressionStatement",
                  "src": "1022:69:1"
                },
                {
                  "assignments": [
                    1003
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1003,
                      "mutability": "mutable",
                      "name": "nftTypeId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1096,
                      "src": "1101:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1002,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1101:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1011,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 1006,
                            "name": "_nftIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 939,
                            "src": "1139:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 1008,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 1007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1147:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1139:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1004,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 925,
                          "src": "1118:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GenNFT_$1518",
                            "typeString": "contract GenNFT"
                          }
                        },
                        "id": 1005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getTypeByTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1422,
                        "src": "1118:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Type_$1172_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (struct GenNFT.Type memory)"
                        }
                      },
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1118:32:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Type_$1172_memory_ptr",
                        "typeString": "struct GenNFT.Type memory"
                      }
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "id",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1167,
                    "src": "1118:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1101:52:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1013,
                          "name": "nftTypeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "1180:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "38",
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1192:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "value": "8"
                        },
                        "src": "1180:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f752061726520486967686572206265696e67",
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1195:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e1c4ac99677821327641be2c2bf757db31f481d164979e9b27908daf5fe2789",
                          "typeString": "literal_string \"you are Higher being\""
                        },
                        "value": "you are Higher being"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e1c4ac99677821327641be2c2bf757db31f481d164979e9b27908daf5fe2789",
                          "typeString": "literal_string \"you are Higher being\""
                        }
                      ],
                      "id": 1012,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1172:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1172:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1018,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:46:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 1022,
                                  "name": "_nftIds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 939,
                                  "src": "1257:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1024,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 1023,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1265:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1257:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1020,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 925,
                                "src": "1236:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GenNFT_$1518",
                                  "typeString": "contract GenNFT"
                                }
                              },
                              "id": 1021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getTypeByTokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1422,
                              "src": "1236:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Type_$1172_memory_ptr_$",
                                "typeString": "function (uint256) view external returns (struct GenNFT.Type memory)"
                              }
                            },
                            "id": 1025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1236:32:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Type_$1172_memory_ptr",
                              "typeString": "struct GenNFT.Type memory"
                            }
                          },
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1167,
                          "src": "1236:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1027,
                          "name": "nftTypeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "1275:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1236:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e67206e66742074797065",
                        "id": 1029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1286:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a705e29541cb01919ddc58dff2311b4e220e49d2647ac3148a08d1f6dd7b67a7",
                          "typeString": "literal_string \"Wrong nft type\""
                        },
                        "value": "Wrong nft type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a705e29541cb01919ddc58dff2311b4e220e49d2647ac3148a08d1f6dd7b67a7",
                          "typeString": "literal_string \"Wrong nft type\""
                        }
                      ],
                      "id": 1019,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1228:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1031,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:75:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 1035,
                                  "name": "_nftIds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 939,
                                  "src": "1342:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1037,
                                "indexExpression": {
                                  "hexValue": "32",
                                  "id": 1036,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1350:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1342:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1033,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 925,
                                "src": "1321:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GenNFT_$1518",
                                  "typeString": "contract GenNFT"
                                }
                              },
                              "id": 1034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getTypeByTokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1422,
                              "src": "1321:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Type_$1172_memory_ptr_$",
                                "typeString": "function (uint256) view external returns (struct GenNFT.Type memory)"
                              }
                            },
                            "id": 1038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1321:32:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Type_$1172_memory_ptr",
                              "typeString": "struct GenNFT.Type memory"
                            }
                          },
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1167,
                          "src": "1321:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1040,
                          "name": "nftTypeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "1360:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1321:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e67206e66742074797065",
                        "id": 1042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1371:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a705e29541cb01919ddc58dff2311b4e220e49d2647ac3148a08d1f6dd7b67a7",
                          "typeString": "literal_string \"Wrong nft type\""
                        },
                        "value": "Wrong nft type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a705e29541cb01919ddc58dff2311b4e220e49d2647ac3148a08d1f6dd7b67a7",
                          "typeString": "literal_string \"Wrong nft type\""
                        }
                      ],
                      "id": 1032,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1313:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1313:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1044,
                  "nodeType": "ExpressionStatement",
                  "src": "1313:75:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 1048,
                                  "name": "_nftIds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 939,
                                  "src": "1427:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1050,
                                "indexExpression": {
                                  "hexValue": "33",
                                  "id": 1049,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1435:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1427:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1046,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 925,
                                "src": "1406:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GenNFT_$1518",
                                  "typeString": "contract GenNFT"
                                }
                              },
                              "id": 1047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getTypeByTokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1422,
                              "src": "1406:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Type_$1172_memory_ptr_$",
                                "typeString": "function (uint256) view external returns (struct GenNFT.Type memory)"
                              }
                            },
                            "id": 1051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1406:32:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Type_$1172_memory_ptr",
                              "typeString": "struct GenNFT.Type memory"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1167,
                          "src": "1406:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1053,
                          "name": "nftTypeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "1445:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1406:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e67206e66742074797065",
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1456:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a705e29541cb01919ddc58dff2311b4e220e49d2647ac3148a08d1f6dd7b67a7",
                          "typeString": "literal_string \"Wrong nft type\""
                        },
                        "value": "Wrong nft type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a705e29541cb01919ddc58dff2311b4e220e49d2647ac3148a08d1f6dd7b67a7",
                          "typeString": "literal_string \"Wrong nft type\""
                        }
                      ],
                      "id": 1045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1398:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1398:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1057,
                  "nodeType": "ExpressionStatement",
                  "src": "1398:75:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1061,
                          "name": "_nftIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 939,
                          "src": "1503:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 1063,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1511:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1503:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1064,
                          "name": "nftTypeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "1515:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1527:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1515:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1058,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "1488:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GenNFT_$1518",
                          "typeString": "contract GenNFT"
                        }
                      },
                      "id": 1060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1296,
                      "src": "1488:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1488:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1068,
                  "nodeType": "ExpressionStatement",
                  "src": "1488:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1072,
                          "name": "_nftIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 939,
                          "src": "1554:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 1074,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 1073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1562:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1554:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1566:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 1069,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "1539:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GenNFT_$1518",
                          "typeString": "contract GenNFT"
                        }
                      },
                      "id": 1071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1296,
                      "src": "1539:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1539:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1077,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:29:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1081,
                          "name": "_nftIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 939,
                          "src": "1593:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 1083,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1601:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1593:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1605:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 1078,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "1578:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GenNFT_$1518",
                          "typeString": "contract GenNFT"
                        }
                      },
                      "id": 1080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1296,
                      "src": "1578:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1578:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "1578:29:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1090,
                          "name": "_nftIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 939,
                          "src": "1632:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 1092,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 1091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1640:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1632:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1644:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 1087,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "1617:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GenNFT_$1518",
                          "typeString": "contract GenNFT"
                        }
                      },
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1296,
                      "src": "1617:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 1094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1095,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:29:1"
                }
              ]
            },
            "functionSelector": "08f673d8",
            "id": 1097,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fuseNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 939,
                  "mutability": "mutable",
                  "name": "_nftIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 1097,
                  "src": "675:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 937,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "675:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 938,
                    "nodeType": "ArrayTypeName",
                    "src": "675:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "674:23:1"
            },
            "returnParameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:0:1"
            },
            "scope": 1098,
            "src": "658:995:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1099,
        "src": "423:1232:1"
      }
    ],
    "src": "33:1622:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "56": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x10f20448e0B33A9168F3936698149Cce40b44036",
      "transactionHash": "0x0568d0b121d7769ee579fc528e0d9c8d98119b5c2617e5ccafad0232aaa935dc"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-08T12:53:22.976Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}